{"version":3,"file":"js/app.js","mappings":"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","sources":["webpack://puzzles/./src/App.vue","webpack://puzzles/./src/views/Main.vue","webpack://puzzles/./src/services/PuzzlesService.js","webpack://puzzles/./src/components/puzzleCanvas/Puzzles.vue","webpack://puzzles/./src/utils/MyMath.js","webpack://puzzles/./src/utils/PuzzlesGenerator.js","webpack://puzzles/./src/components/puzzleCanvas/TilesGroup.vue","webpack://puzzles/./src/components/puzzleCanvas/PuzzleTile.vue","webpack://puzzles/./src/components/puzzleCanvas/PuzzleTile.vue?fe20","webpack://puzzles/./src/components/puzzleCanvas/TilesGroup.vue?010c","webpack://puzzles/./src/components/puzzleCanvas/Puzzles.vue?9db4","webpack://puzzles/./src/components/headerControls/GameTimer.vue","webpack://puzzles/./src/components/headerControls/GameTimer.vue?0823","webpack://puzzles/./src/components/headerControls/ImagePreview.vue","webpack://puzzles/./src/components/headerControls/ImagePreview.vue?3eb5","webpack://puzzles/./src/components/headerControls/ZoomControls.vue","webpack://puzzles/./src/components/headerControls/ZoomControls.vue?f9b1","webpack://puzzles/./src/components/puzzleCanvas/LoadSpinner.vue","webpack://puzzles/./src/components/puzzleCanvas/LoadSpinner.vue?d72b","webpack://puzzles/./src/views/Main.vue?0dcf","webpack://puzzles/./src/App.vue?7ccd","webpack://puzzles/./src/utils/LoadImage.js","webpack://puzzles/./src/store/index.js","webpack://puzzles/./src/main.js","webpack://puzzles/webpack/bootstrap","webpack://puzzles/webpack/runtime/chunk loaded","webpack://puzzles/webpack/runtime/compat get default export","webpack://puzzles/webpack/runtime/define property getters","webpack://puzzles/webpack/runtime/global","webpack://puzzles/webpack/runtime/hasOwnProperty shorthand","webpack://puzzles/webpack/runtime/make namespace object","webpack://puzzles/webpack/runtime/jsonp chunk loading","webpack://puzzles/webpack/startup"],"sourcesContent":["<template>\n    <Main></Main>\n</template>\n\n<script>\nimport Main from './views/Main'\n\nexport default {\n  name: 'App',\n  components: {\n      Main\n  }\n}\n</script>\n\n<style>\n    html,\n    body {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n\n    header {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n        padding: 0 20px;\n    }\n\n    *,\n    :before,\n    :after {\n        box-sizing: border-box;\n    }\n</style>\n","<template>\r\n    <div>\r\n        <header>\r\n            <h1>\r\n                Time:\r\n                <GameTimer :stopTimer=\"stopTimer\"></GameTimer>\r\n                <span v-show=\"isWin\"> - You win!!!</span>\r\n            </h1>\r\n\r\n            <div v-if=\"puzzleImage\">\r\n                <ZoomControls :step=\"zoomStep\"></ZoomControls>\r\n\r\n                <br><br>\r\n\r\n                <button v-show=\"!isWin\" @click=\"saveData\">Save</button> |\r\n                <button @click=\"reset\">Reset</button> |\r\n\r\n                <button @click=\"displayImagePreview\">Preview</button>\r\n                <ImagePreview :show=\"showPreview\"></ImagePreview>\r\n            </div>\r\n        </header>\r\n\r\n        <div id=\"puzzle-container\" ref=\"canvasContainer\" :class=\"{blur: blurImage}\">\r\n            <Puzzles v-if=\"puzzleImage\"\r\n                     :zoomStep=\"zoomStep\"\r\n                     :blurImage=\"blurImage\"\r\n                     @win=\"userWin\"\r\n            ></Puzzles>\r\n            <LoadSpinner v-else></LoadSpinner>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions } from 'vuex';\r\n    import { importPuzzles } from \"../services/PuzzlesService\";\r\n    import Puzzles from '../components/puzzleCanvas/Puzzles';\r\n    import GameTimer from \"../components/headerControls/GameTimer\";\r\n    import ImagePreview from \"../components/headerControls/ImagePreview\";\r\n    import ZoomControls from \"../components/headerControls/ZoomControls\";\r\n    import LoadSpinner from \"../components/puzzleCanvas/LoadSpinner\";\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n      Puzzles,\r\n      GameTimer,\r\n      ImagePreview,\r\n      ZoomControls,\r\n      LoadSpinner,\r\n  },\r\n\r\n    data() {\r\n      return {\r\n          isWin: false,\r\n          stopTimer: false,\r\n          showPreview: false,\r\n          zoomStep: 0.5,\r\n      }\r\n    },\r\n\r\n    computed: {\r\n        ...mapState([\r\n            'puzzleImage',\r\n        ]),\r\n\r\n        blurImage() {\r\n            return this.showPreview;\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        ...mapActions([\r\n            'initApp',\r\n            'saveData',\r\n            'resetData',\r\n            'updateCanvasSize',\r\n        ]),\r\n\r\n        userWin() {\r\n            this.isWin = true;\r\n            this.stopTimer = true;\r\n        },\r\n\r\n        displayImagePreview() {\r\n            this.showPreview = !this.showPreview;\r\n        },\r\n\r\n        reset() {\r\n            // reset saved data in localStorage\r\n            this.resetData();\r\n\r\n            // reload the page\r\n            location.reload();\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n        const canvasContainer = this.$refs.canvasContainer;\r\n        this.updateCanvasSize(canvasContainer);\r\n    },\r\n\r\n    beforeMount() {\r\n      // here we can initialize the data from server on the first load\r\n\r\n        let importData = window.puzzles.importData;\r\n\r\n        if (importData) {\r\n            let { time, groups, tilesFlip } = importPuzzles(importData);\r\n\r\n            window.puzzles.time = time;\r\n            window.puzzles.groups = groups;\r\n            window.puzzles.tilesFlip = tilesFlip;\r\n        }\r\n\r\n        this.initApp(window.puzzles);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    #puzzle-container {\r\n        max-width: 100%;\r\n        /*width: 600px;*/\r\n        /*height: 450px;*/\r\n        /*margin: 20px auto;*/\r\n        width: 100%;\r\n        height: 100vh;\r\n        margin: 0;\r\n        background: #eee;\r\n    }\r\n\r\n    .blur {\r\n        filter: blur(4px);\r\n    }\r\n</style>","import axios from 'axios';\r\nimport LZString from 'lz-string';\r\n\r\nexport function importPuzzles(dataToRestore = {}) {\r\n    const dataInJSON = LZString.decompress(LZString.decompressFromEncodedURIComponent(dataToRestore));\r\n\r\n    return JSON.parse(dataInJSON);\r\n}\r\n\r\nexport async function exportPuzzles(url, dataToSave) {\r\n    const dataInJSON = JSON.stringify(dataToSave);\r\n\r\n    let dataCompressed = LZString.compressToEncodedURIComponent(LZString.compress(dataInJSON));\r\n\r\n    // use an url for send data to the server\r\n    // for test save data to the localStorage\r\n    if (url) {\r\n        axios.post(url, dataCompressed)\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    else {\r\n        localStorage.setItem('puzzles', dataCompressed);\r\n    }\r\n}","<template>\r\n    <v-stage\r\n            ref=\"stage\"\r\n            :config=\"stageConfig\"\r\n            @dragstart=\"handleDragstart\"\r\n            @dragend=\"handleDragend\"\r\n            @touchmove=\"zoomTouch\"\r\n            @touchend=\"zoomTouchEnd\"\r\n            @wheel=\"zoomWheel\"\r\n    >\r\n        <v-layer ref=\"layer\">\r\n            <TilesGroup v-for=\"group in orderedGroups\"\r\n                        :key=\"group.id\"\r\n                        :id=\"group.id\"\r\n                        :tiles=\"group.tiles\"\r\n                        :x=\"group.x\"\r\n                        :y=\"group.y\"\r\n                        :imageScale=\"puzzleSize.scale\"\r\n            ></TilesGroup>\r\n        </v-layer>\r\n        <v-layer ref=\"dragLayer\"></v-layer>\r\n    </v-stage>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\r\n    import { PuzzlesGenerator } from '../../utils/PuzzlesGenerator';\r\n    import TilesGroup from \"./TilesGroup\";\r\n\r\n    export default {\r\n        name: \"Puzzles\",\r\n\r\n        components: {\r\n            TilesGroup\r\n        },\r\n\r\n        emits: [\r\n            'win',\r\n        ],\r\n\r\n        props: [\r\n            'zoomStep',\r\n            'blurImage',\r\n        ],\r\n\r\n        data() {\r\n            return {\r\n                isWheeling: false,\r\n                draggingGroupId: null,\r\n                zoomTouchLastCenter: null,\r\n                zoomTouchLastDist: 0,\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'isDataRestored',\r\n                'restorePuzzleGroups',\r\n                'puzzleTilesFlip',\r\n                'groups',\r\n                'puzzles',\r\n                'puzzleWidth',\r\n                'puzzleHeight',\r\n                'tilesNumberHorizontal',\r\n                'tilesNumberVertical',\r\n                'canvasOffset',\r\n                'zoom',\r\n                'stageWidth',\r\n                'stageHeight',\r\n            ]),\r\n\r\n            ...mapGetters([\r\n                'getGroupById',\r\n                'getGroupIndexById',\r\n            ]),\r\n\r\n            stageConfig() {\r\n                return {\r\n                    width: this.stageWidth,\r\n                    height: this.stageHeight,\r\n                    offsetX: -0.5,\r\n                    offsetY: -0.5,\r\n                    scaleX: this.zoom,\r\n                    scaleY: this.zoom,\r\n                    draggable: !!(this.zoom - 1),\r\n                    dragBoundFunc: this.dragStageBoundFunc,\r\n                }\r\n            },\r\n\r\n            puzzleSize() {\r\n                // The size of the Puzzle takes into account the size of the Canvas\r\n\r\n                let\r\n                    width = this.puzzleWidth,\r\n                    height = this.puzzleHeight;\r\n\r\n                let scale = Math.min(\r\n                    (this.stageWidth - this.canvasOffset*2) / width,\r\n                    (this.stageHeight - this.canvasOffset*2) / height\r\n                );\r\n\r\n                if (scale < 1) {\r\n                    width *= scale;\r\n                    height *= scale;\r\n                }\r\n\r\n                return {\r\n                    width,\r\n                    height,\r\n                    scale,\r\n                }\r\n            },\r\n\r\n            tileWidth() {\r\n                return this.puzzleSize.width / this.tilesNumberHorizontal;\r\n            },\r\n\r\n            tileHeight() {\r\n                return this.puzzleSize.height / this.tilesNumberVertical;\r\n            },\r\n\r\n            connectionOffsetX() {\r\n                return this.tileWidth / 8; // 50% of connector size; connector part have size width: (tileWidth / 4)\r\n            },\r\n\r\n            connectionOffsetY() {\r\n                return this.tileHeight / 8; // 50% of connector size; connector part have size height: (tileHeight / 4)\r\n            },\r\n\r\n            stage() {\r\n                return this.$refs.stage?.getNode();\r\n            },\r\n\r\n            mainLayer() {\r\n                return this.$refs.layer.getNode();\r\n            },\r\n\r\n            dragLayer() {\r\n                return this.$refs.dragLayer.getNode();\r\n            },\r\n\r\n            draggingGroup() {\r\n                return this.getGroupById(this.draggingGroupId);\r\n            },\r\n\r\n            groupsLinkedToDragged() {\r\n                // get the groups that are neighbors with the tiles of the dragged group\r\n\r\n                const draggingGroup = this.draggingGroup;\r\n\r\n                if (!draggingGroup) return [];\r\n\r\n                const groupTilesId = draggingGroup.tiles.map(tile => tile.id);\r\n\r\n                const linked = new Set();\r\n\r\n                // ID list of linked tiles\r\n                draggingGroup.tiles\r\n                    .forEach(tile => {\r\n                        Object.values(tile.linked)\r\n                            .forEach(val => linked.add(val));\r\n                    });\r\n\r\n                // delete the dragging group tiles from linked, and null\r\n                groupTilesId.forEach(id => linked.delete(id));\r\n                linked.delete(null);\r\n\r\n                // get all groups that contain tiles linked to the dragging group\r\n                const linkedGroups = this.groups.filter(group => {\r\n                    return group.tiles.find(tile => linked.has(tile.id));\r\n                });\r\n\r\n                return linkedGroups;\r\n            },\r\n\r\n            orderedGroups() {\r\n                // big groups where tiles count more than 6 are placed under the little groups\r\n\r\n                let bigGroups = this.groups.filter(group => group.tiles.length >= 6);\r\n                let smallGroups = this.groups.filter(group => group.tiles.length < 6);\r\n\r\n                return [...bigGroups, ...smallGroups];\r\n            },\r\n\r\n            groupPositionLimits() {\r\n                // place groups within the canvas stage\r\n\r\n                let xMin = this.canvasOffset + this.connectionOffsetX;\r\n                let xMax = this.stageWidth - this.tileWidth - (xMin * 2);\r\n\r\n                let yMin = this.canvasOffset + this.connectionOffsetY;\r\n                let yMax = this.stageHeight - this.tileHeight - (yMin * 2);\r\n\r\n                return {xMin, xMax, yMin, yMax};\r\n            },\r\n\r\n        },\r\n\r\n        methods: {\r\n            ...mapMutations([\r\n                'setPuzzles',\r\n                'setPuzzleGroups',\r\n                'setPuzzleTilesFlip',\r\n            ]),\r\n\r\n            ...mapActions([\r\n                'removeGroupById',\r\n                'pushGroupToTop',\r\n                'setZoom',\r\n                'runGameTimer',\r\n            ]),\r\n\r\n            mergeGroups(groupsToMerge) {\r\n                // merge draggingGroup and other linked groups to the first found group\r\n                const draggingGroup = this.draggingGroup;\r\n\r\n                this.removeGroupById(draggingGroup.id);\r\n\r\n                if (!groupsToMerge.length) return draggingGroup;\r\n\r\n                // get first group for merge\r\n                let mergedGroup = groupsToMerge.shift();\r\n\r\n                // remove this first group from groups\r\n                this.removeGroupById(mergedGroup.id);\r\n\r\n                // merge other groups of tiles to the first group\r\n                groupsToMerge.forEach(group => {\r\n                    let removedGroup = group;\r\n                    this.removeGroupById(group.id);\r\n\r\n                    mergedGroup.tiles = [...mergedGroup.tiles, ...removedGroup.tiles];\r\n                });\r\n\r\n                mergedGroup.tiles = [...mergedGroup.tiles, ...draggingGroup.tiles];\r\n\r\n                return mergedGroup;\r\n            },\r\n\r\n            checkLinkedTiles({x, y}) {\r\n                // check distance to linked tile groups\r\n                let groupsToMerge = this.groupsLinkedToDragged.filter(group => {\r\n                    const dx = Math.abs(group.x - x);\r\n                    const dy = Math.abs(group.y - y);\r\n\r\n                    return dx <= this.connectionOffsetX && dy <= this.connectionOffsetY;\r\n                });\r\n\r\n                let mergedGroups = this.mergeGroups(groupsToMerge);\r\n\r\n                // change groups order by sets a dragged group to the top\r\n                this.pushGroupToTop(mergedGroups);\r\n            },\r\n\r\n            handleDragstart(evt) {\r\n                const shape = evt.target;\r\n\r\n                // don't do anything with Stage\r\n                if (shape.name() !== 'TilesGroup') return true;\r\n\r\n                const shapeId = shape.id();\r\n\r\n                // check if anything is currently dragging\r\n                if (this.draggingGroupId) {\r\n                    shape.stopDrag();\r\n                    return false;\r\n                }\r\n\r\n                // save an ID of the draggingGroup\r\n                this.draggingGroupId = shapeId;\r\n\r\n                // moving to another layer will improve dragging performance\r\n                // place the drag group to the dragLayer\r\n                shape.moveTo(this.dragLayer);\r\n                this.stage.draw();\r\n            },\r\n\r\n            handleDragend(evt) {\r\n                const shape = evt.target;\r\n\r\n                // don't do anything with Stage\r\n                if (shape.name() !== 'TilesGroup') return true;\r\n\r\n                // set position of draggingGroup\r\n                const x = shape.x();\r\n                const y = shape.y();\r\n\r\n                this.draggingGroup.x = x;\r\n                this.draggingGroup.y = y;\r\n\r\n                // back the drag group to the mainLayer\r\n                shape.moveTo(this.mainLayer);\r\n                \r\n                // check if shape is near the linked puzzle tiles\r\n                this.checkLinkedTiles({x, y});\r\n\r\n                this.checkGameIsEnd();\r\n\r\n                this.draggingGroupId = null;\r\n            },\r\n\r\n            getTouchDistance(p1, p2) {\r\n                return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\r\n            },\r\n\r\n            getTouchCenter(p1, p2) {\r\n                return {\r\n                    x: (p1.x + p2.x) / 2,\r\n                    y: (p1.y + p2.y) / 2,\r\n                };\r\n            },\r\n\r\n            zoomTouch(e) {\r\n                const touch1 = e.evt.touches[0];\r\n                const touch2 = e.evt.touches[1];\r\n\r\n                if (touch1 && touch2) {\r\n                    e.evt.preventDefault();\r\n\r\n                    // if the stage was under Konva's drag&drop\r\n                    // we need to stop it, and implement our own pan logic with two pointers\r\n                    if (this.stage.isDragging()) {\r\n                        this.stage.stopDrag();\r\n                    }\r\n\r\n                    // if any group was drag&drop we need to stop it\r\n                    if (this.draggingGroupId) {\r\n                        let draggingGroup = this.stage.findOne('#' + this.draggingGroupId);\r\n\r\n                        draggingGroup.stopDrag();\r\n                    }\r\n\r\n                    let p1 = {\r\n                        x: touch1.clientX,\r\n                        y: touch1.clientY,\r\n                    };\r\n                    let p2 = {\r\n                        x: touch2.clientX,\r\n                        y: touch2.clientY,\r\n                    };\r\n\r\n                    if (!this.zoomTouchLastCenter) {\r\n                        this.zoomTouchLastCenter = this.getTouchCenter(p1, p2);\r\n                        return;\r\n                    }\r\n\r\n                    let newCenter = this.getTouchCenter(p1, p2);\r\n\r\n                    let dist = this.getTouchDistance(p1, p2);\r\n\r\n                    if (!this.zoomTouchLastDist) {\r\n                        this.zoomTouchLastDist = dist;\r\n                    }\r\n\r\n                    // local coordinates of center point\r\n                    const oldZoom = this.zoom;\r\n\r\n                    let pointTo = {\r\n                        x: (newCenter.x - this.stage.x()) / oldZoom,\r\n                        y: (newCenter.y - this.stage.y()) / oldZoom,\r\n                    };\r\n\r\n                    let zoom = oldZoom * (dist / this.zoomTouchLastDist);\r\n\r\n                    // calculate new position of the stage\r\n                    let dx = newCenter.x - this.zoomTouchLastCenter.x;\r\n                    let dy = newCenter.y - this.zoomTouchLastCenter.y;\r\n\r\n                    let newPos = {\r\n                        x: newCenter.x - pointTo.x * zoom + dx,\r\n                        y: newCenter.y - pointTo.y * zoom + dy,\r\n                    };\r\n\r\n                    this.setZoom(zoom).then(() => {\r\n                        if (zoom !== this.zoom) return;\r\n\r\n                        this.setStagePosition(newPos);\r\n                    });\r\n\r\n                    this.zoomTouchLastDist = dist;\r\n                    this.zoomTouchLastCenter = newCenter;\r\n\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            zoomTouchEnd() {\r\n                this.zoomTouchLastDist = 0;\r\n                this.zoomTouchLastCenter = null;\r\n            },\r\n\r\n            zoomWheel(e) {\r\n                if (this.draggingGroupId || this.stage.isDragging()) return false;\r\n\r\n                e.evt.preventDefault();\r\n\r\n                this.isWheeling = true;\r\n\r\n                const pointer = this.stage.getPointerPosition();\r\n\r\n                let mousePointTo = {\r\n                    x: (pointer.x - this.stage.x()) / this.zoom,\r\n                    y: (pointer.y - this.stage.y()) / this.zoom,\r\n                };\r\n\r\n                // how to scale? Zoom in? Or zoom out?\r\n                const direction = e.evt.deltaY > 0 ? 1 : -1;\r\n\r\n                const newZoom = direction > 0 ? this.zoom - this.zoomStep : this.zoom + this.zoomStep;\r\n\r\n                // new position related to the pointer\r\n                let newPos = {\r\n                    x: pointer.x - mousePointTo.x * newZoom,\r\n                    y: pointer.y - mousePointTo.y * newZoom,\r\n                };\r\n\r\n                this.setZoom(newZoom).then(() => {\r\n                    if (newZoom !== this.zoom) return;\r\n\r\n                    this.setStagePosition(newPos);\r\n                });\r\n\r\n                this.isWheeling = false;\r\n            },\r\n\r\n            setStagePosition(pos) {\r\n                // limit new position related to the stage bounds\r\n                let boundPos = this.dragStageBoundFunc(pos);\r\n\r\n                this.stage.position(boundPos);\r\n            },\r\n\r\n            dragStageBoundFunc({x, y}) {\r\n                const xMin = -this.stageWidth * (this.zoom - 1);\r\n                const yMin = -this.stageHeight * (this.zoom - 1);\r\n\r\n                let newX = Math.min(0, Math.max(x, xMin));\r\n                let newY = Math.min(0, Math.max(y, yMin));\r\n\r\n                return {x: newX, y: newY};\r\n            },\r\n\r\n            centerOnZoom(oldZoom, newZoom) {\r\n                const halfWidth = this.stageWidth / 2;\r\n                const halfHeight = this.stageHeight / 2;\r\n\r\n                const x = halfWidth - (halfWidth - this.stage.x()) / oldZoom * newZoom;\r\n                const y = halfHeight - (halfHeight - this.stage.y()) / oldZoom * newZoom;\r\n\r\n                return {x, y};\r\n            },\r\n\r\n            checkGameIsEnd() {\r\n                if (this.groups.length === 1) {\r\n                    this.$emit('win');\r\n                }\r\n            },\r\n\r\n            setGroupsDataAfterInitialization() {\r\n                let puzzleGroups = [];\r\n\r\n                // restore puzzleGroups or create new\r\n                if(this.isDataRestored) {\r\n                    puzzleGroups = this.restorePuzzleGroups.map(({id, x, y, tilesIdArray}) => {\r\n\r\n                        // recover tiles by id from generated puzzles\r\n                        let tiles = tilesIdArray.map(id => this.puzzles[id]);\r\n\r\n                        return { id, x, y, tiles };\r\n                    });\r\n                }\r\n                else {\r\n                    for (const [tileId, tile] of Object.entries(this.puzzles)) {\r\n                        const pos = this.makeRandomPosition(tile.offsetX, tile.offsetY);\r\n\r\n                        let group = {\r\n                            id: tileId, // we can take the same tile id for the group\r\n                            tiles: [tile],\r\n                            x: pos.x,\r\n                            y: pos.y,\r\n                        };\r\n\r\n                        puzzleGroups.push(group);\r\n                    }\r\n                }\r\n\r\n                this.setPuzzleGroups(puzzleGroups);\r\n            },\r\n\r\n            createPuzzles() {\r\n                // generate puzzle tile shapes\r\n\r\n                const puzzlesGenerator = new PuzzlesGenerator({\r\n                    tilesH: +this.tilesNumberHorizontal,\r\n                    tilesV: +this.tilesNumberVertical,\r\n                    tileWidth: this.tileWidth,\r\n                    tileHeight: this.tileHeight,\r\n                    tilesFlip: this.puzzleTilesFlip,\r\n                });\r\n\r\n                let puzzles = puzzlesGenerator.createPuzzles();\r\n\r\n                // save flip of the puzzle tiles\r\n                const tilesFlip = puzzlesGenerator.getTilesFlip();\r\n                this.setPuzzleTilesFlip(tilesFlip);\r\n\r\n                // commit puzzles\r\n                this.setPuzzles(puzzles);\r\n\r\n                // set position for new created or restored groups\r\n                this.setGroupsDataAfterInitialization();\r\n            },\r\n\r\n            makeRandomPosition(offsetX, offsetY) {\r\n                // offsetX, offsetY: tile offset position in the group\r\n                const l = this.groupPositionLimits;\r\n\r\n                let x = Math.floor(l.xMin + (Math.random() * l.xMax) - offsetX);\r\n                let y = Math.floor(l.yMin + (Math.random() * l.yMax) - offsetY);\r\n\r\n                return {x, y};\r\n            },\r\n\r\n\r\n        },\r\n\r\n        watch: {\r\n            zoom(newValue, oldValue) {\r\n                if (this.isWheeling) return;\r\n\r\n                // zoom relative to the center when using the zoom buttons on the control panel\r\n                const pos = this.centerOnZoom(oldValue, newValue);\r\n\r\n                this.setStagePosition(pos);\r\n            },\r\n        },\r\n\r\n        created() {\r\n            this.createPuzzles();\r\n        },\r\n\r\n        mounted() {\r\n            this.runGameTimer();\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","\r\nfunction twoDigitsStr(number) {\r\n    return (100 + number).toString().slice(1);\r\n}\r\n\r\nfunction roundNumbetTo2Digits(number) {\r\n    return Math.floor(number * 100) / 100;\r\n}\r\n\r\nexport { twoDigitsStr, roundNumbetTo2Digits };","import { roundNumbetTo2Digits, twoDigitsStr } from './MyMath';\r\n\r\nexport function PuzzlesGenerator({tilesH = 1, tilesV = 1, tileWidth = 20, tileHeight = 20, tilesFlip = []}) {\r\n    const tabSize = (20 / 200); // tiles connection shape size\r\n    const jitter = (4 / 100);\r\n    let seed = Math.random() * 10000;\r\n    let a, b, c, d, e, flip;\r\n\r\n    const isRestore = tilesFlip.length;\r\n    let iFlip = 0;\r\n\r\n    let offsetX = 0;\r\n    let offsetY = 0;\r\n    let x = 0;\r\n    let y = 0;\r\n    let isVertical = false;\r\n\r\n    const random = () => {\r\n        seed++;\r\n        let x = Math.sin(seed) * 10000;\r\n        return x - Math.floor(x);\r\n    };\r\n\r\n    const uniform = (min, max) => {\r\n        let r = random();\r\n        return min + r * (max - min);\r\n    };\r\n\r\n    const randomBool = () => { // rbool\r\n        return random() > 0.5;\r\n    };\r\n\r\n    const l = (v) => {\r\n        const tileSize = isVertical ? tileHeight : tileWidth;\r\n        const r = x + tileSize * v; // setPosition (x) + tile_size (height) * curveK (v)\r\n        return roundNumbetTo2Digits(r);\r\n    };\r\n\r\n    const w = (v) => {\r\n        const tileSize = isVertical ? tileWidth : tileHeight;\r\n        const r = y + tileSize * v * (flip ? -1 : 1);\r\n        return roundNumbetTo2Digits(r);\r\n    };\r\n\r\n    const l0 = () => l(0);\r\n    const l1 = () => l(0.2);\r\n    const l2 = () => l(0.5 + b + d);\r\n    const l3 = () => l(0.5 - tabSize + b);\r\n    const l4 = () => l(0.5 - 2.0 * tabSize + b - d);\r\n    const l5 = () => l(0.5 + 2.0 * tabSize + b - d);\r\n    const l6 = () => l(0.5 + tabSize + b);\r\n    const l7 = () => l(0.5 + b + d);\r\n    const l8 = () => l(0.8);\r\n    const l9 = () => l(1.0); // h=1, v=0\r\n\r\n    const w0 = () => w(0);\r\n    const w1 = () => w(a);\r\n    const w2 = () => w(-tabSize + c);\r\n    const w3 = () => w(tabSize + c);\r\n    const w4 = () => w(3 * tabSize + c);\r\n    const w5 = w4;\r\n    const w6 = w3;\r\n    const w7 = w2;\r\n    const w8 = () => w(e);\r\n    const w9 = () => w(0); // h=0, v=1\r\n\r\n    const next = () => {\r\n        let flipold = flip;\r\n\r\n        if (isRestore) {\r\n            flip = tilesFlip[iFlip++];\r\n        }\r\n        else {\r\n            flip = +randomBool();\r\n            tilesFlip.push(flip);\r\n        }\r\n\r\n        e = uniform(-jitter, jitter);\r\n\r\n        a = (flip == flipold ? -e: e);\r\n        b = uniform(-jitter, jitter);\r\n        c = uniform(-jitter, jitter);\r\n        d = uniform(-jitter, jitter);\r\n        e = uniform(-jitter, jitter);\r\n    };\r\n\r\n    const setPos = (xPos, yPos) => {\r\n        x = xPos;\r\n        y = yPos;\r\n    };\r\n\r\n    this.getTilesFlip = () => {\r\n        return tilesFlip;\r\n    };\r\n\r\n    this.horizontal = () => {\r\n        isVertical = false;\r\n        next();\r\n\r\n        let arr = [];\r\n\r\n        arr[0] = [' C', l1(), w1(),l2(), w2(),l3(), w3()];\r\n        arr[1] = [' C', l4(), w4(),l5(), w5(),l6(), w6()];\r\n        arr[2] = [' C', l7(), w7(),l8(), w8(),l9(), w9()];\r\n\r\n        return arr;\r\n    };\r\n\r\n    this.vertical = () => {\r\n        isVertical = true;\r\n        next();\r\n\r\n        let arr = [];\r\n\r\n        arr[0] = [' C', w1(), l1(),w2(), l2(),w3(), l3()];\r\n        arr[1] = [' C', w4(), l4(),w5(), l5(),w6(), l6()];\r\n        arr[2] = [' C', w7(), l7(),w8(), l8(),w9(), l9()];\r\n\r\n        return arr;\r\n    };\r\n\r\n    this.makeTileId = (indexV, indexH) => {\r\n        // type: String\r\n        return twoDigitsStr(indexV) + twoDigitsStr(indexH);\r\n    };\r\n\r\n    // [xPos, yPos] - puzzle tile position on image\r\n    // {top, right, left, bottom} - take a tile side from previous tile\r\n    // for the right side of current tile set the \"left\" from previous tile is it exist\r\n    this.createTile = ([xPos, yPos], { top = null, right = null, left = null, bottom = null }) => {\r\n        offsetX = xPos;\r\n        offsetY = yPos;\r\n        let path = '';\r\n\r\n        // first triangle\r\n        setPos(offsetX, offsetY);\r\n        path += [' M', l0(), w0()];\r\n        top = (top === 'line') ? [' L', offsetX + tileWidth, offsetY] : top;\r\n        top = top || this.horizontal();\r\n        path += top;\r\n\r\n        setPos(offsetY, offsetX + tileWidth);\r\n        right = (right === 'line') ? [' L', offsetX + tileWidth, offsetY + tileHeight] : right;\r\n        right = right || this.vertical();\r\n        path += right;\r\n\r\n        // move to start point\r\n        setPos(offsetX, offsetY);\r\n        path += [' M', l0(), w0()];\r\n\r\n        // second triangle\r\n        setPos(offsetY, offsetX);\r\n        left = (left === 'line') ? [' L', offsetX, offsetY + tileHeight] : left;\r\n        left = left || this.vertical();\r\n        path += left;\r\n\r\n        setPos(offsetX, offsetY + tileHeight);\r\n        bottom = (bottom === 'line') ? [' L', offsetX + tileWidth, offsetY + tileHeight] : bottom;\r\n        bottom = bottom || this.horizontal();\r\n        path += bottom;\r\n\r\n        return {path, top, right, left, bottom, offsetX, offsetY};\r\n    };\r\n\r\n    this.createTileSides = ({prevV, prevH, v, h}) => {\r\n        // the 'line' is the border around the puzzles\r\n        const top   = prevV.bottom || 'line';\r\n        const left  = prevH.right || 'line';\r\n        const right  = (h === tilesH - 1) ? 'line' : null;\r\n        const bottom = (v === tilesV - 1) ? 'line' : null;\r\n\r\n        return {top, right, left, bottom};\r\n    };\r\n\r\n    this.createPuzzles = () => {\r\n        const puzzles = {};\r\n\r\n        // generate puzzle tiles matrix (grid)\r\n        for (let v = 0; v < tilesV; v++) {\r\n            for (let h = 0; h < tilesH; h++) {\r\n                let x = tileWidth * h;\r\n                let y = tileHeight * v;\r\n\r\n                const prevV = v && puzzles[this.makeTileId(v - 1, h)];\r\n                const prevH = h && puzzles[this.makeTileId(v, h - 1)];\r\n\r\n                let tileSides = this.createTileSides({prevV, prevH, v, h});\r\n\r\n                // create puzzle tile item\r\n                let tile = this.createTile([x, y], tileSides);\r\n\r\n                // set tile id\r\n                let tileId = this.makeTileId(v, h);\r\n                tile.id = tileId;\r\n\r\n                // make links to neighbors\r\n                let linked = {\r\n                    top: null,\r\n                    left: null,\r\n                    right: null,\r\n                    bottom: null,\r\n                };\r\n\r\n                if (prevV) {\r\n                    linked.top = prevV.id;\r\n                    prevV.linked['bottom'] = tileId;\r\n                }\r\n\r\n                if (prevH) {\r\n                    linked.left = prevH.id;\r\n                    prevH.linked['right'] = tileId\r\n                }\r\n\r\n                tile.linked = linked;\r\n\r\n                // add the created tile item to the puzzles\r\n                puzzles[tileId] = tile;\r\n            }\r\n        }\r\n\r\n        return puzzles;\r\n    };\r\n\r\n}","<template>\r\n    <v-group\r\n            :config=\"{\r\n                name: 'TilesGroup',\r\n                id,\r\n                x,\r\n                y,\r\n                draggable: true,\r\n            }\"\r\n    >\r\n        <PuzzleTile v-for=\"tile in tiles\"\r\n                    :key=\"tile.id\"\r\n                    :path=\"tile.path\"\r\n                    :imageScale=\"imageScale\"\r\n        ></PuzzleTile>\r\n    </v-group>\r\n</template>\r\n\r\n<script>\r\n    import PuzzleTile from \"./PuzzleTile\";\r\n\r\n    export default {\r\n        name: \"TilesGroup\",\r\n\r\n        components: {\r\n            PuzzleTile\r\n        },\r\n\r\n        props: [\r\n            'id',\r\n            'tiles',\r\n            'x',\r\n            'y',\r\n            'imageScale',\r\n        ],\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","<template>\r\n    <v-path\r\n            ref=\"puzzleTile\"\r\n            :config=\"{\r\n                data: path,\r\n                strokeWidth: 1,\r\n                stroke: 'black',\r\n                fillPatternImage: puzzleImage,\r\n                fillPatternScaleX: imageScale,\r\n                fillPatternScaleY: imageScale,\r\n                fillPatternRepeat: 'no-repeat',\r\n                hitStrokeWidth: 0,\r\n                perfectDrawEnabled: false,\r\n                shadowEnabled: false,\r\n                shadowForStrokeEnabled: false,\r\n            }\"\r\n    ></v-path>\r\n</template>\r\n\r\n<script>\r\n    import { mapState } from 'vuex';\r\n\r\n    export default {\r\n        name: \"PuzzleTile\",\r\n\r\n        props: [\r\n            'path',\r\n            'imageScale',\r\n        ],\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'puzzleImage',\r\n            ]),\r\n\r\n            puzzleTile() {\r\n                return this.$refs['puzzleTile'].getNode();\r\n            },\r\n\r\n        },\r\n\r\n        mounted() {\r\n            this.puzzleTile.cache({ pixelRatio: 3 });\r\n        },\r\n\r\n        beforeUnmount() {\r\n            this.puzzleTile.clearCache();\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./PuzzleTile.vue?vue&type=template&id=0839e93a\"\nimport script from \"./PuzzleTile.vue?vue&type=script&lang=js\"\nexport * from \"./PuzzleTile.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TilesGroup.vue?vue&type=template&id=2576d47e\"\nimport script from \"./TilesGroup.vue?vue&type=script&lang=js\"\nexport * from \"./TilesGroup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Puzzles.vue?vue&type=template&id=c8471b0a\"\nimport script from \"./Puzzles.vue?vue&type=script&lang=js\"\nexport * from \"./Puzzles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <span>{{hours}} : {{twoDigits(minutes)}} : {{twoDigits(seconds)}}</span>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapMutations, mapActions } from 'vuex';\r\n\r\n    export default {\r\n        name: \"GameTimer\",\r\n\r\n        props: [\r\n            'stopTimer',\r\n        ],\r\n\r\n        data() {\r\n            return {\r\n                timer: null,\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'time',\r\n                'isTimerRun',\r\n            ]),\r\n\r\n            seconds() {\r\n                return this.time % 60;\r\n            },\r\n\r\n            minutes() {\r\n                return Math.floor((this.time % 3600) / 60);\r\n            },\r\n\r\n            hours() {\r\n                return Math.floor(this.time / 3600);\r\n            },\r\n\r\n        },\r\n\r\n        methods: {\r\n            ...mapMutations([\r\n                'setTime',\r\n            ]),\r\n\r\n            ...mapActions([\r\n                // use runGameTimer/stopGameTimer to control the game timer\r\n                'runGameTimer',\r\n                'stopGameTimer',\r\n            ]),\r\n\r\n            twoDigits(val) {\r\n                return (100 + val).toString().slice(1);\r\n            },\r\n\r\n            start() {\r\n                this.timer = setInterval(() => {\r\n                    let newTime = this.time + 1;\r\n\r\n                    this.setTime(newTime);\r\n                }, 1000);\r\n            },\r\n\r\n            pause() {\r\n                clearInterval(this.timer);\r\n            },\r\n\r\n            timerRun(isTimerRun) {\r\n                if (isTimerRun) {\r\n                    this.start();\r\n                }\r\n                else {\r\n                    this.pause();\r\n                }\r\n            },\r\n\r\n        },\r\n\r\n        watch: {\r\n            isTimerRun(value) {\r\n                this.timerRun(value);\r\n            },\r\n        },\r\n\r\n        mounted() {\r\n            this.timerRun(this.isTimerRun);\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./GameTimer.vue?vue&type=template&id=0951ca9d\"\nimport script from \"./GameTimer.vue?vue&type=script&lang=js\"\nexport * from \"./GameTimer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div v-show=\"show\" class=\"image-container\">\r\n        <img :src=\"puzzleImageSrc\" alt=\"\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {mapState} from 'vuex';\r\n\r\n    export default {\r\n        name: \"ImagePreview\",\r\n\r\n        props: [\r\n            'show',\r\n        ],\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'puzzleImageSrc'\r\n            ]),\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .image-container {\r\n        position: relative;\r\n        z-index: 1;\r\n    }\r\n\r\n    img {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        max-width: 200px;\r\n        padding: 5px;\r\n        border: 1px solid;\r\n        object-fit: contain;\r\n        background: #ddd;\r\n    }\r\n</style>","import { render } from \"./ImagePreview.vue?vue&type=template&id=e7e8bf5a&scoped=true\"\nimport script from \"./ImagePreview.vue?vue&type=script&lang=js\"\nexport * from \"./ImagePreview.vue?vue&type=script&lang=js\"\n\nimport \"./ImagePreview.vue?vue&type=style&index=0&id=e7e8bf5a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e7e8bf5a\"]])\n\nexport default __exports__","<template>\r\n    <span class=\"\">\r\n        <button @click=\"zoomDecrease\">Zoom -</button>\r\n        {{ roundedZoom }}\r\n        <button @click=\"zoomIncrease\">Zoom +</button>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions } from 'vuex';\r\n    import { roundNumbetTo2Digits } from '../../utils/MyMath';\r\n\r\n    export default {\r\n        name: \"ZoomControls\",\r\n\r\n        props: {\r\n            step: {\r\n                type: Number,\r\n                default: 1,\r\n            },\r\n        },\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'zoom',\r\n            ]),\r\n\r\n            roundedZoom() {\r\n                return roundNumbetTo2Digits(this.zoom);\r\n            },\r\n\r\n        },\r\n\r\n        methods: {\r\n            ...mapActions([\r\n                'setZoom',\r\n            ]),\r\n\r\n            zoomDecrease() {\r\n                let value = this.zoom - this.step;\r\n                                \r\n                this.setZoom(value);\r\n            },\r\n\r\n            zoomIncrease() {\r\n                let value = this.zoom + this.step;\r\n\r\n                this.setZoom(value);\r\n            },\r\n\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./ZoomControls.vue?vue&type=template&id=0aecf4af\"\nimport script from \"./ZoomControls.vue?vue&type=script&lang=js\"\nexport * from \"./ZoomControls.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <span class=\"loader\"></span>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"LoadSpinner\"\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .loader {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        margin: auto;\r\n        width: 48px;\r\n        height: 48px;\r\n        border: 5px solid #4155ff;\r\n        border-bottom-color: transparent;\r\n        border-radius: 50%;\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        animation: rotation 1s linear infinite;\r\n    }\r\n\r\n    @keyframes rotation {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n</style>","import { render } from \"./LoadSpinner.vue?vue&type=template&id=7aa26b2a&scoped=true\"\nimport script from \"./LoadSpinner.vue?vue&type=script&lang=js\"\nexport * from \"./LoadSpinner.vue?vue&type=script&lang=js\"\n\nimport \"./LoadSpinner.vue?vue&type=style&index=0&id=7aa26b2a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7aa26b2a\"]])\n\nexport default __exports__","import { render } from \"./Main.vue?vue&type=template&id=31fb324c&scoped=true\"\nimport script from \"./Main.vue?vue&type=script&lang=js\"\nexport * from \"./Main.vue?vue&type=script&lang=js\"\n\nimport \"./Main.vue?vue&type=style&index=0&id=31fb324c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-31fb324c\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=4a149e02\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4a149e02&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default (callback, imageSrc) => {\r\n    if (!imageSrc.length) return;\r\n\r\n    let imageObj = new Image();\r\n\r\n    imageObj.onload = (e) => {\r\n        let image = e.composedPath()[0];\r\n\r\n        callback(image, imageSrc);\r\n    };\r\n\r\n    imageObj.src = imageSrc;\r\n}","import { createStore } from 'vuex';\r\nimport LoadImage from '../utils/LoadImage';\r\nimport { exportPuzzles } from '../services/PuzzlesService';\r\n\r\nexport const store = createStore({\r\n    state () {\r\n        return {\r\n            isDataRestored: false,\r\n            restorePuzzleGroups: [],\r\n            puzzleTilesFlip: [],\r\n            urlSave: '',\r\n            tilesNumberHorizontal: 0,\r\n            tilesNumberVertical: 0,\r\n            canvasOffset: 0,\r\n\r\n            groups: [],\r\n            puzzles: {},\r\n            puzzleImageSrc: '',\r\n            puzzleImage: null,\r\n            puzzleWidth: 0,\r\n            puzzleHeight: 0,\r\n\r\n            time: 0,\r\n            isTimerRun: false,\r\n\r\n            zoom: 1,\r\n            stageWidth: 500,\r\n            stageHeight: 500,\r\n        }\r\n    },\r\n\r\n    getters: {\r\n        getGroupById: (state) => (id) => {\r\n            return state.groups.find(group => group.id === id);\r\n        },\r\n\r\n        getGroupIndexById: (state) => (id) => {\r\n            return state.groups.findIndex(group => group.id === id);\r\n        },\r\n    },\r\n\r\n    mutations: {\r\n        setIsDataRestored(state, isDataRestored) {\r\n            state.isDataRestored = isDataRestored;\r\n        },\r\n\r\n        setRestorePuzzleGroups(state, groups) {\r\n            state.restorePuzzleGroups = groups;\r\n        },\r\n\r\n        setPuzzleTilesFlip(state, tilesFlip) {\r\n            state.puzzleTilesFlip = tilesFlip;\r\n        },\r\n\r\n        setTime(state, time) {\r\n            state.time = +time;\r\n        },\r\n\r\n        setTimerRun(state, isRun) {\r\n            state.isTimerRun = isRun;\r\n        },\r\n\r\n        setZoom(state, zoom) {\r\n            state.zoom = +zoom;\r\n        },\r\n\r\n        setUrlSave(state, url) {\r\n            state.urlSave = url;\r\n        },\r\n\r\n        setPuzzles(state, puzzles) {\r\n            state.puzzles = puzzles;\r\n        },\r\n\r\n        setPuzzleGroups(state, groups) {\r\n            state.groups = groups;\r\n        },\r\n\r\n        setPuzzleImageSrc(state, src) {\r\n            state.puzzleImageSrc = src;\r\n        },\r\n\r\n        setPuzzleImage(state, image) {\r\n            state.puzzleImage = image;\r\n        },\r\n\r\n        setPuzzleWidth(state, width) {\r\n            state.puzzleWidth = +width;\r\n        },\r\n\r\n        setPuzzleHeight(state, height) {\r\n            state.puzzleHeight = +height;\r\n        },\r\n\r\n        setPuzzleTilesNumberHorizontal(state, number) {\r\n            state.tilesNumberHorizontal = +number;\r\n        },\r\n\r\n        setPuzzleTilesNumberVertical(state, number) {\r\n            state.tilesNumberVertical = +number;\r\n        },\r\n\r\n        setCanvasOffset(state, offset) {\r\n            state.canvasOffset = +offset;\r\n        },\r\n\r\n        addPuzzlesGroup(state, group) {\r\n            state.groups.push(group);\r\n        },\r\n\r\n        removePuzzlesGroup(state, index) {\r\n            state.groups.splice(index, 1);\r\n        },\r\n\r\n        setStageWidth(state, width) {\r\n            state.stageWidth = +width;\r\n        },\r\n\r\n        setStageHeight(state, height) {\r\n            state.stageHeight = +height;\r\n        },\r\n\r\n    },\r\n\r\n    actions: {\r\n        initApp({commit, dispatch}, data) {\r\n            const isDataRestored = !!data.importData;\r\n            const urlSave = data.urlSave || '';\r\n            const puzzleImageSrc = data.imageSrc || '';\r\n            const tilesNumberHorizontal = +data.tilesNumberHorizontal || 0;\r\n            const tilesNumberVertical = +data.tilesNumberVertical || 0;\r\n            const canvasOffset = +data.canvasOffset || 0;\r\n\r\n            // init data\r\n            commit('setIsDataRestored', isDataRestored);\r\n            commit('setUrlSave', urlSave);\r\n            commit('setPuzzleImageSrc', puzzleImageSrc);\r\n            commit('setPuzzleTilesNumberHorizontal', tilesNumberHorizontal);\r\n            commit('setPuzzleTilesNumberVertical', tilesNumberVertical);\r\n            commit('setCanvasOffset', canvasOffset);\r\n\r\n            if (isDataRestored) {\r\n                const restorePuzzleGroups = data.groups || [];\r\n                const puzzleTilesFlip = data.tilesFlip || [];\r\n                const time = +data.time || 0;\r\n\r\n                commit('setRestorePuzzleGroups', restorePuzzleGroups);\r\n                commit('setPuzzleTilesFlip', puzzleTilesFlip);\r\n                dispatch('setTime', time);\r\n            }\r\n\r\n            // load puzzle image\r\n            LoadImage(image => {\r\n                if (!image) throw new Error(`Image file not found: ${puzzleImageSrc}`);\r\n\r\n                const puzzleWidth = image.naturalWidth;\r\n                const puzzleHeight = image.naturalHeight;\r\n\r\n                commit('setPuzzleWidth', puzzleWidth);\r\n                commit('setPuzzleHeight', puzzleHeight);\r\n                commit('setPuzzleImage', image);\r\n            }, puzzleImageSrc);\r\n        },\r\n\r\n        runGameTimer({commit}) {\r\n            commit('setTimerRun', true);\r\n        },\r\n\r\n        stopGameTimer({commit}) {\r\n            commit('setTimerRun', false);\r\n        },\r\n\r\n        setZoom({commit}, zoom) {\r\n            const MIN = 1;\r\n            const MAX = 3;\r\n\r\n            let newZoom = Math.max(MIN, Math.min(MAX, +zoom));\r\n\r\n            commit('setZoom', newZoom);\r\n        },\r\n\r\n        removeGroupById({getters, commit}, groupId) {\r\n            const index = getters.getGroupIndexById(groupId);\r\n\r\n            commit('removePuzzlesGroup', index);\r\n        },\r\n\r\n        pushGroupToTop({commit}, group) {\r\n            commit('addPuzzlesGroup', group);\r\n        },\r\n\r\n        updateCanvasSize({commit}, canvasContainer) {\r\n            commit('setStageWidth', canvasContainer.offsetWidth);\r\n            commit('setStageHeight', canvasContainer.offsetHeight);\r\n        },\r\n\r\n        saveData({state}) {\r\n            const url = state.urlSave;\r\n\r\n            let groups = state.groups.map(({id, x, y, tiles}) => {\r\n\r\n                // save only id of the grouped tiles\r\n                let tilesIdArray = tiles.map(tile => tile.id);\r\n\r\n                return {\r\n                    id, x, y,\r\n                    tilesIdArray,\r\n                }\r\n            });\r\n\r\n            let dataToSave = {\r\n                time: state.time,\r\n                groups,\r\n                tilesFlip: state.puzzleTilesFlip\r\n            };\r\n\r\n            // send data to the server\r\n            exportPuzzles(url, dataToSave);\r\n        },\r\n\r\n        resetData() {\r\n            localStorage.removeItem('puzzles');\r\n        },\r\n\r\n    }\r\n});","import { createApp } from 'vue';\nimport App from './App.vue';\nimport { store } from './store'\nimport Konva from 'konva';\nimport VueKonva from 'vue-konva';\n\n// by default Konva prevent some events when node is dragging\n// it improve the performance and work well for 95% of cases\n// we need to enable all events on Konva, even when we are dragging a node\n// so it triggers touchmove correctly\nKonva.hitOnDragEnabled = true;\n\nconst app = createApp(App);\n\napp.use(store);\napp.use(VueKonva);\n\napp.mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpuzzles\"] = self[\"webpackChunkpuzzles\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_Main","_createElementVNode","_createElementBlock","_createVNode","_component_GameTimer","stopTimer","$data","isWin","_ctx","puzzleImage","_hoisted_1","_component_ZoomControls","step","zoomStep","_hoisted_2","_hoisted_3","onClick","_cache","args","saveData","$options","reset","displayImagePreview","_component_ImagePreview","show","showPreview","id","ref","class","_normalizeClass","blur","blurImage","_component_Puzzles","onWin","userWin","_component_LoadSpinner","key","importPuzzles","dataToRestore","dataInJSON","LZString","JSON","parse","async","exportPuzzles","url","dataToSave","stringify","dataCompressed","axios","post","then","response","console","log","catch","error","localStorage","setItem","_component_v_stage","config","stageConfig","onDragstart","handleDragstart","onDragend","handleDragend","onTouchmove","zoomTouch","onTouchend","zoomTouchEnd","onWheel","zoomWheel","_component_v_layer","_Fragment","_renderList","orderedGroups","group","_component_TilesGroup","tiles","x","y","imageScale","puzzleSize","scale","twoDigitsStr","number","toString","slice","roundNumbetTo2Digits","Math","floor","PuzzlesGenerator","tilesH","tilesV","tileWidth","tileHeight","tilesFlip","tabSize","jitter","a","b","c","d","e","flip","seed","random","isRestore","length","iFlip","offsetX","offsetY","isVertical","sin","uniform","min","max","r","randomBool","l","v","tileSize","w","l0","l1","l2","l3","l4","l5","l6","l7","l8","l9","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","next","flipold","push","setPos","xPos","yPos","this","getTilesFlip","horizontal","arr","vertical","makeTileId","indexV","indexH","createTile","top","right","left","bottom","path","createTileSides","prevV","prevH","h","createPuzzles","puzzles","tileSides","tile","tileId","linked","_component_v_group","$props","_component_PuzzleTile","_component_v_path","name","props","computed","mapState","puzzleTile","$refs","getNode","mounted","cache","pixelRatio","beforeUnmount","clearCache","__exports__","components","PuzzleTile","TilesGroup","emits","data","isWheeling","draggingGroupId","zoomTouchLastCenter","zoomTouchLastDist","mapGetters","width","stageWidth","height","stageHeight","scaleX","zoom","scaleY","draggable","dragBoundFunc","dragStageBoundFunc","puzzleWidth","puzzleHeight","canvasOffset","tilesNumberHorizontal","tilesNumberVertical","connectionOffsetX","connectionOffsetY","stage","mainLayer","layer","dragLayer","draggingGroup","getGroupById","groupsLinkedToDragged","groupTilesId","map","Set","forEach","Object","values","val","add","delete","linkedGroups","groups","filter","find","has","bigGroups","smallGroups","groupPositionLimits","xMin","xMax","yMin","yMax","methods","mapMutations","mapActions","mergeGroups","groupsToMerge","removeGroupById","mergedGroup","shift","removedGroup","checkLinkedTiles","dx","abs","dy","mergedGroups","pushGroupToTop","evt","shape","target","shapeId","stopDrag","moveTo","draw","checkGameIsEnd","getTouchDistance","p1","p2","sqrt","pow","getTouchCenter","touch1","touches","touch2","preventDefault","isDragging","findOne","clientX","clientY","newCenter","dist","oldZoom","pointTo","newPos","setZoom","setStagePosition","pointer","getPointerPosition","mousePointTo","direction","deltaY","newZoom","pos","boundPos","position","newX","newY","centerOnZoom","halfWidth","halfHeight","$emit","setGroupsDataAfterInitialization","puzzleGroups","isDataRestored","restorePuzzleGroups","tilesIdArray","entries","makeRandomPosition","setPuzzleGroups","puzzlesGenerator","puzzleTilesFlip","setPuzzleTilesFlip","setPuzzles","watch","newValue","oldValue","created","runGameTimer","_toDisplayString","hours","twoDigits","minutes","seconds","timer","time","start","setInterval","newTime","setTime","pause","clearInterval","timerRun","isTimerRun","value","src","puzzleImageSrc","alt","zoomDecrease","roundedZoom","zoomIncrease","type","Number","default","Puzzles","GameTimer","ImagePreview","ZoomControls","LoadSpinner","resetData","location","reload","canvasContainer","updateCanvasSize","beforeMount","importData","window","initApp","Main","render","callback","imageSrc","imageObj","Image","onload","image","composedPath","store","createStore","state","urlSave","getters","getGroupIndexById","findIndex","mutations","setIsDataRestored","setRestorePuzzleGroups","setTimerRun","isRun","setUrlSave","setPuzzleImageSrc","setPuzzleImage","setPuzzleWidth","setPuzzleHeight","setPuzzleTilesNumberHorizontal","setPuzzleTilesNumberVertical","setCanvasOffset","offset","addPuzzlesGroup","removePuzzlesGroup","index","splice","setStageWidth","setStageHeight","actions","commit","dispatch","LoadImage","Error","naturalWidth","naturalHeight","stopGameTimer","MIN","MAX","groupId","offsetWidth","offsetHeight","removeItem","Konva","app","createApp","App","use","VueKonva","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}