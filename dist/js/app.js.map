{"version":3,"file":"js/app.js","mappings":"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","sources":["webpack://puzzles/./src/App.vue","webpack://puzzles/./src/views/Main.vue","webpack://puzzles/./src/services/PuzzlesService.js","webpack://puzzles/./src/components/puzzleCanvas/PuzzleMatrix.vue","webpack://puzzles/./src/utils/MyMath.js","webpack://puzzles/./src/utils/PuzzlesGenerator.js","webpack://puzzles/./src/components/puzzleCanvas/TilesGroup.vue","webpack://puzzles/./src/components/puzzleCanvas/PuzzleTile.vue","webpack://puzzles/./src/components/puzzleCanvas/PuzzleTile.vue?fe20","webpack://puzzles/./src/components/puzzleCanvas/TilesGroup.vue?010c","webpack://puzzles/./src/components/puzzleCanvas/PuzzleMatrix.vue?2d96","webpack://puzzles/./src/components/headerControls/GameTimer.vue","webpack://puzzles/./src/components/headerControls/GameTimer.vue?0823","webpack://puzzles/./src/components/headerControls/ImagePreview.vue","webpack://puzzles/./src/components/headerControls/ImagePreview.vue?3eb5","webpack://puzzles/./src/components/headerControls/ZoomControls.vue","webpack://puzzles/./src/components/headerControls/ZoomControls.vue?f9b1","webpack://puzzles/./src/views/Main.vue?0dcf","webpack://puzzles/./src/App.vue?7ccd","webpack://puzzles/./src/utils/LoadImage.js","webpack://puzzles/./src/store/index.js","webpack://puzzles/./src/main.js","webpack://puzzles/webpack/bootstrap","webpack://puzzles/webpack/runtime/chunk loaded","webpack://puzzles/webpack/runtime/compat get default export","webpack://puzzles/webpack/runtime/define property getters","webpack://puzzles/webpack/runtime/global","webpack://puzzles/webpack/runtime/hasOwnProperty shorthand","webpack://puzzles/webpack/runtime/make namespace object","webpack://puzzles/webpack/runtime/jsonp chunk loading","webpack://puzzles/webpack/startup"],"sourcesContent":["<template>\n    <Main></Main>\n</template>\n\n<script>\nimport Main from './views/Main'\n\nexport default {\n  name: 'App',\n  components: {\n      Main\n  }\n}\n</script>\n\n<style>\n    html,\n    body {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n\n    header {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n        padding: 0 20px;\n    }\n\n    *,\n    :before,\n    :after {\n        box-sizing: border-box;\n    }\n</style>\n","<template>\n    <div>\n        <header>\n            <h1>\n                Time:\n                <GameTimer :stopTimer=\"stopTimer\"></GameTimer>\n                <span v-show=\"isWin\"> - You win!!!</span>\n            </h1>\n\n            <ZoomControls :step=\"zoomStep\"></ZoomControls>\n\n            <br><br>\n\n            <button v-show=\"!isWin\" @click=\"saveData\">Save</button> |\n\n            <button @click=\"displayImagePreview\">Preview</button>\n            <ImagePreview :show=\"showPreview\"></ImagePreview>\n        </header>\n\n        <PuzzleMatrix\n                :zoomStep=\"zoomStep\"\n                :blurImage=\"blurImage\"\n                @win=\"userWin\"\n        ></PuzzleMatrix>\n    </div>\n</template>\n\n<script>\n    import { mapState, mapActions } from 'vuex';\n    import { importPuzzles } from \"../services/PuzzlesService\";\n    import PuzzleMatrix from '../components/puzzleCanvas/PuzzleMatrix';\n    import GameTimer from \"../components/headerControls/GameTimer\";\n    import ImagePreview from \"../components/headerControls/ImagePreview\";\n    import ZoomControls from \"../components/headerControls/ZoomControls\";\n\nexport default {\n  name: 'App',\n  components: {\n      ZoomControls,\n      ImagePreview,\n      GameTimer,\n      PuzzleMatrix,\n  },\n\n    data() {\n      return {\n          isWin: false,\n          stopTimer: false,\n          showPreview: false,\n          zoomStep: 0.5,\n      }\n    },\n\n    computed: {\n        ...mapState([\n            'puzzles',\n            'puzzleImage',\n            'zoom',\n            'time',\n        ]),\n\n        blurImage() {\n            return this.showPreview;\n        }\n    },\n\n    methods: {\n        ...mapActions([\n            'initApp',\n            'saveData',\n        ]),\n\n        userWin() {\n            this.isWin = true;\n            this.stopTimer = true;\n        },\n\n        displayImagePreview() {\n            this.showPreview = !this.showPreview;\n        },\n\n    },\n\n    beforeMount() {\n      // here we can initialize the data from server on the first load\n\n        let importData = window.puzzles.importData;\n\n        if (importData) {\n            let { time, groups } = importPuzzles(importData);\n\n            window.puzzles.time = time;\n            window.puzzles.groups = groups;\n        }\n\n        this.initApp(window.puzzles);\n    }\n}\n</script>\n\n<style>\n\n</style>","import LZString from 'lz-string';\r\n\r\nexport function importPuzzles(dataToRestore = {}) {\r\n    const dataInJSON = LZString.decompress(LZString.decompressFromEncodedURIComponent(dataToRestore));\r\n\r\n    return JSON.parse(dataInJSON);\r\n}\r\n\r\nexport async function exportPuzzles(url, dataToSave) {\r\n    const dataInJSON = JSON.stringify(dataToSave);\r\n\r\n    let dataCompressed = LZString.compressToEncodedURIComponent(LZString.compress(dataInJSON));\r\n\r\n    // use an url for send data to the server\r\n    // for test save data to the localStorage\r\n    localStorage.setItem('puzzles', dataCompressed)\r\n}","<template>\r\n    <div id=\"puzzle-container\" ref=\"canvasContainer\" :class=\"{blur: blurImage}\">\r\n        <v-stage v-if=\"puzzleImage\"\r\n                 ref=\"stage\"\r\n                 :config=\"stageConfig\"\r\n                 @dragstart=\"handleDragstart\"\r\n                 @dragend=\"handleDragend\"\r\n                 @touchmove=\"zoomTouch\"\r\n                 @touchend=\"zoomTouchEnd\"\r\n                 @wheel=\"zoomWheel\"\r\n        >\r\n            <v-layer ref=\"layer\">\r\n                <TilesGroup v-for=\"group in orderedGroups\"\r\n                            :key=\"group.id\"\r\n                            :id=\"group.id\"\r\n                            :tiles=\"group.tiles\"\r\n                            :x=\"group.x\"\r\n                            :y=\"group.y\"\r\n                            :imageScale=\"imageScale\"\r\n                ></TilesGroup>\r\n            </v-layer>\r\n            <v-layer ref=\"dragLayer\"></v-layer>\r\n        </v-stage>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\r\n    import { PuzzlesGenerator } from '../../utils/PuzzlesGenerator';\r\n    import TilesGroup from \"./TilesGroup\";\r\n\r\n    export default {\r\n        name: \"PuzzleMatrix\",\r\n\r\n        components: {\r\n            TilesGroup\r\n        },\r\n\r\n        emits: [\r\n            'win',\r\n        ],\r\n\r\n        props: [\r\n            'zoomStep',\r\n            'blurImage',\r\n        ],\r\n\r\n        data() {\r\n            return {\r\n                isDragging: false,\r\n                isWheeling: false,\r\n                draggingGroupId: null,\r\n                zoomTouchLastCenter: null,\r\n                zoomTouchLastDist: 0,\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'isDataRestored',\r\n                'restorePuzzleGroups',\r\n                'groups',\r\n                'puzzles',\r\n                'puzzleImage',\r\n                'puzzleWidth',\r\n                'puzzleHeight',\r\n                'tilesNumberHorizontal',\r\n                'tilesNumberVertical',\r\n                'canvasOffset',\r\n                'zoom',\r\n                'stageWidth',\r\n                'stageHeight',\r\n            ]),\r\n\r\n            ...mapGetters([\r\n                'getGroupById',\r\n                'getGroupIndexById',\r\n            ]),\r\n\r\n            stageConfig() {\r\n                return {\r\n                    width: this.stageWidth,\r\n                    height: this.stageHeight,\r\n                    offsetX: -0.5,\r\n                    offsetY: -0.5,\r\n                    scaleX: this.zoom,\r\n                    scaleY: this.zoom,\r\n                    draggable: !!(this.zoom - 1),\r\n                    dragBoundFunc: this.dragStageBoundFunc,\r\n                }\r\n            },\r\n\r\n            puzzleSize() {\r\n                // The size of the Puzzle takes into account the size of the Canvas\r\n\r\n                let\r\n                    width = this.puzzleWidth,\r\n                    height = this.puzzleHeight;\r\n\r\n                let scale = Math.min(\r\n                    (this.stageWidth - this.canvasOffset*2) / width,\r\n                    (this.stageHeight - this.canvasOffset*2) / height\r\n                );\r\n\r\n                if (scale < 1) {\r\n                    width *= scale;\r\n                    height *= scale;\r\n                }\r\n\r\n                return {\r\n                    width,\r\n                    height,\r\n                }\r\n            },\r\n\r\n            imageScale() {\r\n                // The size of the loaded Image takes into account the size of the Puzzle\r\n\r\n                let scale = 1;\r\n\r\n                if (this.puzzleImage) {\r\n                    scale = Math.min(\r\n                        this.puzzleSize.width / this.puzzleImage.width,\r\n                        this.puzzleSize.height / this.puzzleImage.height\r\n                    );\r\n                }\r\n\r\n                return scale;\r\n            },\r\n\r\n            tileWidth() {\r\n                return this.puzzleSize.width / this.tilesNumberHorizontal;\r\n            },\r\n\r\n            tileHeight() {\r\n                return this.puzzleSize.height / this.tilesNumberVertical;\r\n            },\r\n\r\n            connectionOffsetX() {\r\n                return this.tileWidth / 8; // 50% of connector size; connector part have size width: (tileWidth / 4)\r\n            },\r\n\r\n            connectionOffsetY() {\r\n                return this.tileHeight / 8; // 50% of connector size; connector part have size height: (tileHeight / 4)\r\n            },\r\n\r\n            canvasContainer() {\r\n                return this.$refs.canvasContainer;\r\n            },\r\n\r\n            stage() {\r\n                return this.$refs.stage?.getNode();\r\n            },\r\n\r\n            mainLayer() {\r\n                return this.$refs.layer.getNode();\r\n            },\r\n\r\n            dragLayer() {\r\n                return this.$refs.dragLayer.getNode();\r\n            },\r\n\r\n            draggingGroup() {\r\n                return this.getGroupById(this.draggingGroupId);\r\n            },\r\n\r\n            groupsLinkedToDragged() {\r\n                // get the groups that are neighbors with the tiles of the dragged group\r\n\r\n                const draggingGroup = this.draggingGroup;\r\n\r\n                if (!draggingGroup) return [];\r\n\r\n                const groupTilesId = draggingGroup.tiles.map(tile => tile.id);\r\n\r\n                const linked = new Set();\r\n\r\n                // ID list of linked tiles\r\n                draggingGroup.tiles\r\n                    .forEach(tile => {\r\n                        Object.values(tile.linked)\r\n                            .forEach(val => linked.add(val));\r\n                    });\r\n\r\n                // delete the dragging group tiles from linked, and null\r\n                groupTilesId.forEach(id => linked.delete(id));\r\n                linked.delete(null);\r\n\r\n                // get all groups that contain tiles linked to the dragging group\r\n                const linkedGroups = this.groups.filter(group => {\r\n                    return group.tiles.find(tile => linked.has(tile.id));\r\n                });\r\n\r\n                return linkedGroups;\r\n            },\r\n\r\n            orderedGroups() {\r\n                // big groups where tiles count more than 6 are placed under the little groups\r\n\r\n                let bigGroups = this.groups.filter(group => group.tiles.length >= 6);\r\n                let smallGroups = this.groups.filter(group => group.tiles.length < 6);\r\n\r\n                return [...bigGroups, ...smallGroups];\r\n            },\r\n\r\n            groupPositionLimits() {\r\n                // place groups within the canvas stage\r\n\r\n                let xMin = this.canvasOffset + this.connectionOffsetX;\r\n                let xMax = this.stageWidth - this.tileWidth - (xMin * 2);\r\n\r\n                let yMin = this.canvasOffset + this.connectionOffsetY;\r\n                let yMax = this.stageHeight - this.tileHeight - (yMin * 2);\r\n\r\n                return {xMin, xMax, yMin, yMax};\r\n            },\r\n\r\n        },\r\n\r\n        methods: {\r\n            ...mapMutations([\r\n                'setPuzzles',\r\n                'setPuzzleGroups',\r\n            ]),\r\n\r\n            ...mapActions([\r\n                'removeGroupById',\r\n                'pushGroupToTop',\r\n                'setZoom',\r\n                'updateCanvasSize',\r\n            ]),\r\n\r\n            mergeGroups(groupsToMerge) {\r\n                // merge draggingGroup and other linked groups to the first found group\r\n                const draggingGroup = this.draggingGroup;\r\n\r\n                this.removeGroupById(draggingGroup.id);\r\n\r\n                if (!groupsToMerge.length) return draggingGroup;\r\n\r\n                // get first group for merge\r\n                let mergedGroup = groupsToMerge.shift();\r\n\r\n                // remove this first group from groups\r\n                this.removeGroupById(mergedGroup.id);\r\n\r\n                // merge other groups of tiles to the first group\r\n                groupsToMerge.forEach(group => {\r\n                    let removedGroup = group;\r\n                    this.removeGroupById(group.id);\r\n\r\n                    mergedGroup.tiles = [...mergedGroup.tiles, ...removedGroup.tiles];\r\n                });\r\n\r\n                mergedGroup.tiles = [...mergedGroup.tiles, ...draggingGroup.tiles];\r\n\r\n                return mergedGroup;\r\n            },\r\n\r\n            checkLinkedTiles({x, y}) {\r\n                // check distance to linked tile groups\r\n                let groupsToMerge = this.groupsLinkedToDragged.filter(group => {\r\n                    const dx = Math.abs(group.x - x);\r\n                    const dy = Math.abs(group.y - y);\r\n\r\n                    return dx <= this.connectionOffsetX && dy <= this.connectionOffsetY;\r\n                });\r\n\r\n                let mergedGroups = this.mergeGroups(groupsToMerge);\r\n\r\n                // change groups order by sets a dragged group to the top\r\n                this.pushGroupToTop(mergedGroups);\r\n            },\r\n\r\n            handleDragstart(evt) {\r\n                \r\n                // check if anything is currently dragging\r\n                if (this.isDragging) return false;\r\n\r\n                this.isDragging = true;\r\n\r\n                // moving to another layer will improve dragging performance\r\n                const shape = evt.target;\r\n\r\n                // don't do anything with Stage\r\n                if (shape.name() !== 'TilesGroup') return true;\r\n\r\n                // save an ID of the draggingGroup\r\n                this.draggingGroupId = shape.id();\r\n\r\n                // place the drag group to the dragLayer\r\n                shape.moveTo(this.dragLayer);\r\n                this.stage.draw();\r\n            },\r\n\r\n            handleDragend(evt) {\r\n                this.isDragging = false;\r\n\r\n                const shape = evt.target;\r\n\r\n                // don't do anything with Stage\r\n                if (shape.name() !== 'TilesGroup') return true;\r\n\r\n                // set position of draggingGroup\r\n                const x = shape.x();\r\n                const y = shape.y();\r\n\r\n                this.draggingGroup.x = x;\r\n                this.draggingGroup.y = y;\r\n\r\n                // back the drag group to the mainLayer\r\n                shape.moveTo(this.mainLayer);\r\n                \r\n                // check if shape is near the linked puzzle tiles\r\n                this.checkLinkedTiles({x, y});\r\n\r\n                this.checkGameIsEnd();\r\n            },\r\n\r\n            getDistance(p1, p2) {\r\n                return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\r\n            },\r\n\r\n            getCenter(p1, p2) {\r\n                return {\r\n                    x: (p1.x + p2.x) / 2,\r\n                    y: (p1.y + p2.y) / 2,\r\n                };\r\n            },\r\n\r\n            zoomTouch(e) {\r\n                const touch1 = e.evt.touches[0];\r\n                const touch2 = e.evt.touches[1];\r\n\r\n                if (touch1 && touch2) {\r\n                    e.evt.preventDefault();\r\n\r\n                    // if the stage was under Konva's drag&drop\r\n                    // we need to stop it, and implement our own pan logic with two pointers\r\n                    if (this.stage.isDragging()) {\r\n                        this.stage.stopDrag();\r\n                    }\r\n\r\n                    let p1 = {\r\n                        x: touch1.clientX,\r\n                        y: touch1.clientY,\r\n                    };\r\n                    let p2 = {\r\n                        x: touch2.clientX,\r\n                        y: touch2.clientY,\r\n                    };\r\n\r\n                    if (!this.zoomTouchLastCenter) {\r\n                        this.zoomTouchLastCenter = this.getCenter(p1, p2);\r\n                        return;\r\n                    }\r\n\r\n                    let newCenter = this.getCenter(p1, p2);\r\n\r\n                    let dist = this.getDistance(p1, p2);\r\n\r\n                    if (!this.zoomTouchLastDist) {\r\n                        this.zoomTouchLastDist = dist;\r\n                    }\r\n\r\n                    // local coordinates of center point\r\n                    const oldZoom = this.zoom;\r\n\r\n                    let pointTo = {\r\n                        x: (newCenter.x - this.stage.x()) / oldZoom,\r\n                        y: (newCenter.y - this.stage.y()) / oldZoom,\r\n                    };\r\n\r\n                    let zoom = oldZoom * (dist / this.zoomTouchLastDist);\r\n\r\n                    // calculate new position of the stage\r\n                    let dx = newCenter.x - this.zoomTouchLastCenter.x;\r\n                    let dy = newCenter.y - this.zoomTouchLastCenter.y;\r\n\r\n                    let newPos = {\r\n                        x: newCenter.x - pointTo.x * zoom + dx,\r\n                        y: newCenter.y - pointTo.y * zoom + dy,\r\n                    };\r\n\r\n                    this.setZoom(zoom).then(() => {\r\n                        if (zoom !== this.zoom) return;\r\n\r\n                        this.setStagePosition(newPos);\r\n                    });\r\n\r\n                    this.zoomTouchLastDist = dist;\r\n                    this.zoomTouchLastCenter = newCenter;\r\n                }\r\n            },\r\n\r\n            zoomTouchEnd() {\r\n                this.zoomTouchLastDist = 0;\r\n                this.zoomTouchLastCenter = null;\r\n            },\r\n\r\n            zoomWheel(e) {\r\n                if (this.isDragging) return false;\r\n\r\n                e.evt.preventDefault();\r\n\r\n                this.isWheeling = true;\r\n\r\n                const pointer = this.stage.getPointerPosition();\r\n\r\n                let mousePointTo = {\r\n                    x: (pointer.x - this.stage.x()) / this.zoom,\r\n                    y: (pointer.y - this.stage.y()) / this.zoom,\r\n                };\r\n\r\n                // how to scale? Zoom in? Or zoom out?\r\n                const direction = e.evt.deltaY > 0 ? 1 : -1;\r\n\r\n                const newZoom = direction > 0 ? this.zoom - this.zoomStep : this.zoom + this.zoomStep;\r\n\r\n                // new position related to the pointer\r\n                let newPos = {\r\n                    x: pointer.x - mousePointTo.x * newZoom,\r\n                    y: pointer.y - mousePointTo.y * newZoom,\r\n                };\r\n\r\n                this.setZoom(newZoom).then(() => {\r\n                    if (newZoom !== this.zoom) return;\r\n\r\n                    this.setStagePosition(newPos);\r\n                });\r\n\r\n                this.isWheeling = false;\r\n            },\r\n\r\n            setStagePosition(pos) {\r\n                // limit new position related to the stage bounds\r\n                let boundPos = this.dragStageBoundFunc(pos);\r\n\r\n                this.stage.position(boundPos);\r\n            },\r\n\r\n            dragStageBoundFunc({x, y}) {\r\n                const xMin = -this.stageWidth * (this.zoom - 1);\r\n                const yMin = -this.stageHeight * (this.zoom - 1);\r\n\r\n                let newX = Math.min(0, Math.max(x, xMin));\r\n                let newY = Math.min(0, Math.max(y, yMin));\r\n\r\n                return {x: newX, y: newY};\r\n            },\r\n\r\n            centerOnZoom(oldZoom, newZoom) {\r\n                const halfWidth = this.stageWidth / 2;\r\n                const halfHeight = this.stageHeight / 2;\r\n\r\n                const x = halfWidth - (halfWidth - this.stage.x()) / oldZoom * newZoom;\r\n                const y = halfHeight - (halfHeight - this.stage.y()) / oldZoom * newZoom;\r\n\r\n                return {x, y};\r\n            },\r\n\r\n            checkGameIsEnd() {\r\n                if (this.groups.length === 1) {\r\n                    this.$emit('win');\r\n                }\r\n            },\r\n\r\n            setGroupsDataAfterInitialization() {\r\n                let puzzleGroups = [];\r\n\r\n                // restore puzzleGroups or create new\r\n                if(this.isDataRestored) {\r\n                    puzzleGroups = this.restorePuzzleGroups.map(({id, x, y, tilesIdArray}) => {\r\n\r\n                        // recover tiles by id from generated puzzles\r\n                        let tiles = tilesIdArray.map(id => this.puzzles[id]);\r\n\r\n                        return { id, x, y, tiles };\r\n                    });\r\n                }\r\n                else {\r\n                    for (const [tileId, tile] of Object.entries(this.puzzles)) {\r\n                        const pos = this.makeRandomPosition(tile.offsetX, tile.offsetY);\r\n\r\n                        let group = {\r\n                            id: tileId, // we can take the same tile id for the group\r\n                            tiles: [tile],\r\n                            x: pos.x,\r\n                            y: pos.y,\r\n                        };\r\n\r\n                        puzzleGroups.push(group);\r\n                    }\r\n                }\r\n\r\n                this.setPuzzleGroups(puzzleGroups);\r\n            },\r\n\r\n            createPuzzles() {\r\n                // generate puzzle tile shapes\r\n\r\n                const puzzlesGenerator = new PuzzlesGenerator({\r\n                    tilesH: +this.tilesNumberHorizontal,\r\n                    tilesV: +this.tilesNumberVertical,\r\n                    tileWidth: this.tileWidth,\r\n                    tileHeight: this.tileHeight,\r\n                });\r\n\r\n                let puzzles = puzzlesGenerator.createPuzzles();\r\n\r\n                // commit puzzles\r\n                this.setPuzzles(puzzles);\r\n\r\n                // set position for new created or restored groups\r\n                this.setGroupsDataAfterInitialization();\r\n            },\r\n\r\n            makeRandomPosition(offsetX, offsetY) {\r\n                // offsetX, offsetY: tile offset position in the group\r\n                const l = this.groupPositionLimits;\r\n\r\n                let x = Math.floor(l.xMin + (Math.random() * l.xMax) - offsetX);\r\n                let y = Math.floor(l.yMin + (Math.random() * l.yMax) - offsetY);\r\n\r\n                return {x, y};\r\n            },\r\n\r\n\r\n        },\r\n\r\n        watch: {\r\n            zoom(newValue, oldValue) {\r\n                if (this.isWheeling) return;\r\n\r\n                // zoom relative to the center when using the zoom buttons on the control panel\r\n                const pos = this.centerOnZoom(oldValue, newValue);\r\n\r\n                this.setStagePosition(pos);\r\n            },\r\n        },\r\n\r\n        mounted() {\r\n            this.updateCanvasSize(this.canvasContainer);\r\n\r\n            this.createPuzzles();\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #puzzle-container {\r\n        max-width: 100%;\r\n        /*width: 600px;*/\r\n        /*height: 450px;*/\r\n        /*margin: 20px auto;*/\r\n        width: 100%;\r\n        height: 100vh;\r\n        margin: 0;\r\n        background: #eee;\r\n    }\r\n\r\n    .blur {\r\n        filter: blur(4px);\r\n    }\r\n</style>","\r\nfunction twoDigitsStr(number) {\r\n    return (100 + number).toString().slice(1);\r\n}\r\n\r\nfunction roundNumbetTo2Digits(number) {\r\n    return Math.floor(number * 100) / 100;\r\n}\r\n\r\nexport { twoDigitsStr, roundNumbetTo2Digits };","import { roundNumbetTo2Digits, twoDigitsStr } from './MyMath';\r\n\r\nexport function PuzzlesGenerator({tilesH = 1, tilesV = 1, tileWidth = 20, tileHeight = 20}) {\r\n    const tabSize = (20 / 200); // tiles connection shape size\r\n    const jitter = (4 / 100);\r\n    let seed = Math.random() * 10000;\r\n    let a, b, c, d, e, flip;\r\n\r\n    let offsetX = 0;\r\n    let offsetY = 0;\r\n    let x = 0;\r\n    let y = 0;\r\n    let isVertical = false;\r\n\r\n    const random = () => {\r\n        seed++;\r\n        let x = Math.sin(seed) * 10000;\r\n        return x - Math.floor(x);\r\n    };\r\n\r\n    const uniform = (min, max) => {\r\n        let r = random();\r\n        return min + r * (max - min);\r\n    };\r\n\r\n    const randomBool = () => { // rbool\r\n        return random() > 0.5;\r\n    };\r\n\r\n    const l = (v) => {\r\n        const tileSize = isVertical ? tileHeight : tileWidth;\r\n        const r = x + tileSize * v; // setPosition (x) + tile_size (height) * curveK (v)\r\n        return roundNumbetTo2Digits(r);\r\n    };\r\n\r\n    const w = (v) => {\r\n        const tileSize = isVertical ? tileWidth : tileHeight;\r\n        const r = y + tileSize * v * (flip ? -1 : 1);\r\n        return roundNumbetTo2Digits(r);\r\n    };\r\n\r\n    const l0 = () => l(0);\r\n    const l1 = () => l(0.2);\r\n    const l2 = () => l(0.5 + b + d);\r\n    const l3 = () => l(0.5 - tabSize + b);\r\n    const l4 = () => l(0.5 - 2.0 * tabSize + b - d);\r\n    const l5 = () => l(0.5 + 2.0 * tabSize + b - d);\r\n    const l6 = () => l(0.5 + tabSize + b);\r\n    const l7 = () => l(0.5 + b + d);\r\n    const l8 = () => l(0.8);\r\n    const l9 = () => l(1.0); // h=1, v=0\r\n\r\n    const w0 = () => w(0);\r\n    const w1 = () => w(a);\r\n    const w2 = () => w(-tabSize + c);\r\n    const w3 = () => w(tabSize + c);\r\n    const w4 = () => w(3 * tabSize + c);\r\n    const w5 = w4;\r\n    const w6 = w3;\r\n    const w7 = w2;\r\n    const w8 = () => w(e);\r\n    const w9 = () => w(0); // h=0, v=1\r\n\r\n\r\n    const next = () => {\r\n        let flipold = flip;\r\n        flip = randomBool();\r\n\r\n        a = (flip == flipold ? -e: e);\r\n        b = uniform(-jitter, jitter);\r\n        c = uniform(-jitter, jitter);\r\n        d = uniform(-jitter, jitter);\r\n        e = uniform(-jitter, jitter);\r\n    };\r\n\r\n    const first = () => {\r\n        e = uniform(-jitter, jitter);\r\n        next();\r\n    };\r\n\r\n    const setPos = (xPos, yPos) => {\r\n        x = xPos;\r\n        y = yPos;\r\n    };\r\n\r\n    this.horizontal = () => {\r\n        isVertical = false;\r\n        first();\r\n\r\n        let arr = [];\r\n\r\n        arr[0] = [' C', l1(), w1(),l2(), w2(),l3(), w3()];\r\n        arr[1] = [' C', l4(), w4(),l5(), w5(),l6(), w6()];\r\n        arr[2] = [' C', l7(), w7(),l8(), w8(),l9(), w9()];\r\n\r\n        return arr;\r\n    };\r\n\r\n    this.vertical = () => {\r\n        isVertical = true;\r\n        first();\r\n\r\n        let arr = [];\r\n\r\n        arr[0] = [' C', w1(), l1(),w2(), l2(),w3(), l3()];\r\n        arr[1] = [' C', w4(), l4(),w5(), l5(),w6(), l6()];\r\n        arr[2] = [' C', w7(), l7(),w8(), l8(),w9(), l9()];\r\n\r\n        return arr;\r\n    };\r\n\r\n    this.makeTileId = (indexV, indexH) => {\r\n        // type: String\r\n        return twoDigitsStr(indexV) + twoDigitsStr(indexH);\r\n    };\r\n\r\n    // [xPos, yPos] - puzzle tile position on image\r\n    // {top, right, left, bottom} - take a tile side from previous tile\r\n    // for the right side of current tile set the \"left\" from previous tile is it exist\r\n    this.createTile = ([xPos, yPos], { top = null, right = null, left = null, bottom = null }) => {\r\n        offsetX = xPos;\r\n        offsetY = yPos;\r\n        let path = '';\r\n\r\n        // first triangle\r\n        setPos(offsetX, offsetY);\r\n        path += [' M', l0(), w0()];\r\n        top = (top === 'line') ? [' L', offsetX + tileWidth, offsetY] : top;\r\n        top = top || this.horizontal();\r\n        path += top;\r\n\r\n        setPos(offsetY, offsetX + tileWidth);\r\n        right = (right === 'line') ? [' L', offsetX + tileWidth, offsetY + tileHeight] : right;\r\n        right = right || this.vertical();\r\n        path += right;\r\n\r\n        // move to start point\r\n        setPos(offsetX, offsetY);\r\n        path += [' M', l0(), w0()];\r\n\r\n        // second triangle\r\n        setPos(offsetY, offsetX);\r\n        left = (left === 'line') ? [' L', offsetX, offsetY + tileHeight] : left;\r\n        left = left || this.vertical();\r\n        path += left;\r\n\r\n        setPos(offsetX, offsetY + tileHeight);\r\n        bottom = (bottom === 'line') ? [' L', offsetX + tileWidth, offsetY + tileHeight] : bottom;\r\n        bottom = bottom || this.horizontal();\r\n        path += bottom;\r\n\r\n        return {path, top, right, left, bottom, offsetX, offsetY};\r\n    };\r\n\r\n    this.createTileSides = ({prevV, prevH, v, h}) => {\r\n        // the 'line' is the border around the puzzles\r\n        const top   = prevV.bottom || 'line';\r\n        const left  = prevH.right || 'line';\r\n        const right  = (h === tilesH - 1) ? 'line' : null;\r\n        const bottom = (v === tilesV - 1) ? 'line' : null;\r\n\r\n        return {top, right, left, bottom};\r\n    };\r\n\r\n    this.createPuzzles = () => {\r\n        const puzzles = {};\r\n\r\n        // generate puzzle tiles matrix (grid)\r\n        for (let v = 0; v < tilesV; v++) {\r\n            for (let h = 0; h < tilesH; h++) {\r\n                let x = tileWidth * h;\r\n                let y = tileHeight * v;\r\n\r\n                const prevV = v && puzzles[this.makeTileId(v - 1, h)];\r\n                const prevH = h && puzzles[this.makeTileId(v, h - 1)];\r\n\r\n                let tileSides = this.createTileSides({prevV, prevH, v, h});\r\n\r\n                // create puzzle tile item\r\n                let tile = this.createTile([x, y], tileSides);\r\n\r\n                // set tile id\r\n                let tileId = this.makeTileId(v, h);\r\n                tile.id = tileId;\r\n\r\n                // make links to neighbors\r\n                let linked = {\r\n                    top: null,\r\n                    left: null,\r\n                    right: null,\r\n                    bottom: null,\r\n                };\r\n\r\n                if (prevV) {\r\n                    linked.top = prevV.id;\r\n                    prevV.linked['bottom'] = tileId;\r\n                }\r\n\r\n                if (prevH) {\r\n                    linked.left = prevH.id;\r\n                    prevH.linked['right'] = tileId\r\n                }\r\n\r\n                tile.linked = linked;\r\n\r\n                // add the created tile item to the puzzles\r\n                puzzles[tileId] = tile;\r\n            }\r\n        }\r\n\r\n        return puzzles;\r\n    };\r\n\r\n}","<template>\r\n    <v-group\r\n            :config=\"{\r\n                name: 'TilesGroup',\r\n                id,\r\n                x,\r\n                y,\r\n                draggable: true,\r\n            }\"\r\n    >\r\n        <PuzzleTile v-for=\"tile in tiles\"\r\n                    :key=\"tile.id\"\r\n                    :path=\"tile.path\"\r\n                    :imageScale=\"imageScale\"\r\n        ></PuzzleTile>\r\n    </v-group>\r\n</template>\r\n\r\n<script>\r\n    import PuzzleTile from \"./PuzzleTile\";\r\n\r\n    export default {\r\n        name: \"TilesGroup\",\r\n\r\n        components: {\r\n            PuzzleTile\r\n        },\r\n\r\n        props: [\r\n            'id',\r\n            'tiles',\r\n            'x',\r\n            'y',\r\n            'imageScale',\r\n        ],\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","<template>\r\n    <v-path\r\n            ref=\"puzzleTile\"\r\n            :config=\"{\r\n                data: path,\r\n                strokeWidth: 1,\r\n                stroke: 'black',\r\n                fillPatternImage: puzzleImage,\r\n                fillPatternScaleX: imageScale,\r\n                fillPatternScaleY: imageScale,\r\n                fillPatternRepeat: 'no-repeat',\r\n                hitStrokeWidth: 0,\r\n                perfectDrawEnabled: false,\r\n                shadowEnabled: false,\r\n                shadowForStrokeEnabled: false,\r\n            }\"\r\n    ></v-path>\r\n</template>\r\n\r\n<script>\r\n    import { mapState } from 'vuex';\r\n\r\n    export default {\r\n        name: \"PuzzleTile\",\r\n\r\n        props: [\r\n            'path',\r\n            'imageScale',\r\n        ],\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'puzzleImage',\r\n            ]),\r\n\r\n            puzzleTile() {\r\n                return this.$refs['puzzleTile'].getNode();\r\n            },\r\n\r\n        },\r\n\r\n        mounted() {\r\n            this.puzzleTile.cache({ pixelRatio: 3 });\r\n        },\r\n\r\n        beforeUnmount() {\r\n            this.puzzleTile.clearCache();\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./PuzzleTile.vue?vue&type=template&id=0839e93a\"\nimport script from \"./PuzzleTile.vue?vue&type=script&lang=js\"\nexport * from \"./PuzzleTile.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TilesGroup.vue?vue&type=template&id=2576d47e\"\nimport script from \"./TilesGroup.vue?vue&type=script&lang=js\"\nexport * from \"./TilesGroup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PuzzleMatrix.vue?vue&type=template&id=0dd21015&scoped=true\"\nimport script from \"./PuzzleMatrix.vue?vue&type=script&lang=js\"\nexport * from \"./PuzzleMatrix.vue?vue&type=script&lang=js\"\n\nimport \"./PuzzleMatrix.vue?vue&type=style&index=0&id=0dd21015&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0dd21015\"]])\n\nexport default __exports__","<template>\r\n    <span>{{hours}} : {{twoDigits(minutes)}} : {{twoDigits(seconds)}}</span>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions } from 'vuex';\r\n\r\n    export default {\r\n        name: \"GameTimer\",\r\n\r\n        props: [\r\n            'stopTimer',\r\n        ],\r\n\r\n        data() {\r\n            return {\r\n                timer: null,\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'time',\r\n            ]),\r\n\r\n            seconds() {\r\n                return this.time % 60;\r\n            },\r\n\r\n            minutes() {\r\n                return Math.floor((this.time % 3600) / 60);\r\n            },\r\n\r\n            hours() {\r\n                return Math.floor(this.time / 3600);\r\n            },\r\n\r\n        },\r\n\r\n        methods: {\r\n            ...mapActions([\r\n                'setTime',\r\n            ]),\r\n\r\n            twoDigits(val) {\r\n                return (100 + val).toString().slice(1);\r\n            },\r\n\r\n            start() {\r\n                this.pause();\r\n\r\n                this.timer = setInterval(() => {\r\n                    let newTime = this.time + 1;\r\n\r\n                    this.setTime(newTime);\r\n                }, 1000);\r\n            },\r\n\r\n            pause() {\r\n                clearInterval(this.timer);\r\n            },\r\n\r\n        },\r\n\r\n        watch: {\r\n            stopTimer() {\r\n                if (this.stopTimer) {\r\n                    this.pause();\r\n                }\r\n                else {\r\n                    this.start();\r\n                }\r\n            }\r\n        },\r\n\r\n        mounted() {\r\n            this.start();\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./GameTimer.vue?vue&type=template&id=156335aa\"\nimport script from \"./GameTimer.vue?vue&type=script&lang=js\"\nexport * from \"./GameTimer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div v-show=\"show\" class=\"image-container\">\r\n        <img :src=\"puzzleImageSrc\" alt=\"\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {mapState} from 'vuex';\r\n\r\n    export default {\r\n        name: \"ImagePreview\",\r\n\r\n        props: [\r\n            'show',\r\n        ],\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'puzzleImageSrc'\r\n            ]),\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .image-container {\r\n        position: relative;\r\n        z-index: 1;\r\n    }\r\n\r\n    img {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        max-width: 200px;\r\n        padding: 5px;\r\n        border: 1px solid;\r\n        object-fit: contain;\r\n        background: #ddd;\r\n    }\r\n</style>","import { render } from \"./ImagePreview.vue?vue&type=template&id=e7e8bf5a&scoped=true\"\nimport script from \"./ImagePreview.vue?vue&type=script&lang=js\"\nexport * from \"./ImagePreview.vue?vue&type=script&lang=js\"\n\nimport \"./ImagePreview.vue?vue&type=style&index=0&id=e7e8bf5a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e7e8bf5a\"]])\n\nexport default __exports__","<template>\r\n    <span class=\"\">\r\n        <button @click=\"zoomDecrease\">Zoom -</button>\r\n        {{ zoom }}\r\n        <button @click=\"zoomIncrease\">Zoom +</button>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions } from 'vuex';\r\n\r\n    export default {\r\n        name: \"ZoomControls\",\r\n\r\n        props: {\r\n            step: {\r\n                type: Number,\r\n                default: 1,\r\n            },\r\n        },\r\n\r\n        computed: {\r\n            ...mapState([\r\n                'zoom',\r\n            ]),\r\n\r\n        },\r\n\r\n        methods: {\r\n            ...mapActions([\r\n                'setZoom',\r\n            ]),\r\n\r\n            zoomDecrease() {\r\n                let value = this.zoom - this.step;\r\n                                \r\n                this.setZoom(value);\r\n            },\r\n\r\n            zoomIncrease() {\r\n                let value = this.zoom + this.step;\r\n\r\n                this.setZoom(value);\r\n            },\r\n\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./ZoomControls.vue?vue&type=template&id=4ccd25e4\"\nimport script from \"./ZoomControls.vue?vue&type=script&lang=js\"\nexport * from \"./ZoomControls.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Main.vue?vue&type=template&id=16bf715c\"\nimport script from \"./Main.vue?vue&type=script&lang=js\"\nexport * from \"./Main.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=4a149e02\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4a149e02&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default (callback, imageSrc) => {\r\n    if (!imageSrc.length) return;\r\n\r\n    let imageObj = new Image();\r\n\r\n    imageObj.onload = (e) => {\r\n        let image = e.composedPath()[0];\r\n\r\n        callback(image, imageSrc);\r\n    };\r\n\r\n    imageObj.src = imageSrc;\r\n}","import { createStore } from 'vuex';\r\nimport LoadImage from '../utils/LoadImage';\r\nimport { exportPuzzles } from '../services/PuzzlesService';\r\n\r\nexport const store = createStore({\r\n    state () {\r\n        return {\r\n            isDataRestored: false,\r\n            restorePuzzleGroups: [],\r\n            urlSave: '',\r\n            time: 0,\r\n            zoom: 1,\r\n            stageWidth: 500,\r\n            stageHeight: 500,\r\n            groups: [],\r\n            puzzles: {},\r\n            puzzleImageSrc: '',\r\n            puzzleImage: null,\r\n            puzzleWidth: 0,\r\n            puzzleHeight: 0,\r\n            tilesNumberHorizontal: 0,\r\n            tilesNumberVertical: 0,\r\n            canvasOffset: 0,\r\n        }\r\n    },\r\n\r\n    getters: {\r\n        getGroupById: (state) => (id) => {\r\n            return state.groups.find(group => group.id === id);\r\n        },\r\n\r\n        getGroupIndexById: (state) => (id) => {\r\n            return state.groups.findIndex(group => group.id === id);\r\n        },\r\n    },\r\n\r\n    mutations: {\r\n        setIsDataRestored(state, isDataRestored) {\r\n            state.isDataRestored = isDataRestored;\r\n        },\r\n\r\n        setRestorePuzzleGroups(state, groups) {\r\n            state.restorePuzzleGroups = groups;\r\n        },\r\n\r\n        setTime(state, time) {\r\n            state.time = +time;\r\n        },\r\n\r\n        setZoom(state, zoom) {\r\n            state.zoom = +zoom;\r\n        },\r\n        \r\n        setUrlSave(state, url) {\r\n            state.urlSave = url;\r\n        },\r\n\r\n        setPuzzles(state, puzzles) {\r\n            state.puzzles = puzzles;\r\n        },\r\n\r\n        setPuzzleGroups(state, groups) {\r\n            state.groups = groups;\r\n        },\r\n\r\n        setPuzzleImageSrc(state, src) {\r\n            state.puzzleImageSrc = src;\r\n        },\r\n        \r\n        setPuzzleImage(state, image) {\r\n            state.puzzleImage = image;\r\n        },\r\n        \r\n        setPuzzleWidth(state, width) {\r\n            state.puzzleWidth = +width;\r\n        },\r\n\r\n        setPuzzleHeight(state, height) {\r\n            state.puzzleHeight = +height;\r\n        },\r\n\r\n        setPuzzleTilesNumberHorizontal(state, number) {\r\n            state.tilesNumberHorizontal = +number;\r\n        },\r\n\r\n        setPuzzleTilesNumberVertical(state, number) {\r\n            state.tilesNumberVertical = +number;\r\n        },\r\n\r\n        setCanvasOffset(state, offset) {\r\n            state.canvasOffset = +offset;\r\n        },\r\n\r\n        addPuzzlesGroup(state, group) {\r\n            state.groups.push(group);\r\n        },\r\n\r\n        removePuzzlesGroup(state, index) {\r\n            state.groups.splice(index, 1);\r\n        },\r\n\r\n        setStageWidth(state, width) {\r\n            state.stageWidth = +width;\r\n        },\r\n\r\n        setStageHeight(state, height) {\r\n            state.stageHeight = +height;\r\n        },\r\n        \r\n    },\r\n\r\n    actions: {\r\n        initApp({commit, dispatch}, data) {\r\n            const isDataRestored = !!data.importData;\r\n            const urlSave = data.urlSave || '';\r\n            const puzzleImageSrc = data.imageSrc || '';\r\n            const puzzleWidth = +data.puzzleWidth || 0;\r\n            const puzzleHeight = +data.puzzleHeight || 0;\r\n            const tilesNumberHorizontal = +data.tilesNumberHorizontal || 0;\r\n            const tilesNumberVertical = +data.tilesNumberVertical || 0;\r\n            const canvasOffset = +data.canvasOffset || 0;\r\n\r\n            // init data\r\n            commit('setIsDataRestored', isDataRestored);\r\n            commit('setUrlSave', urlSave);\r\n            commit('setPuzzleImageSrc', puzzleImageSrc);\r\n            commit('setPuzzleWidth', puzzleWidth);\r\n            commit('setPuzzleHeight', puzzleHeight);\r\n            commit('setPuzzleTilesNumberHorizontal', tilesNumberHorizontal);\r\n            commit('setPuzzleTilesNumberVertical', tilesNumberVertical);\r\n            commit('setCanvasOffset', canvasOffset);\r\n\r\n            if (isDataRestored) {\r\n                const restorePuzzleGroups = data.groups || [];\r\n                const time = +data.time || 0;\r\n\r\n                commit('setRestorePuzzleGroups', restorePuzzleGroups);\r\n                dispatch('setTime', time);\r\n            }\r\n\r\n            // load puzzle image\r\n            LoadImage(image => {\r\n                commit('setPuzzleImage', image)\r\n            }, puzzleImageSrc);\r\n        },\r\n\r\n        setTime({commit}, time) {\r\n            commit('setTime', +time);\r\n        },\r\n\r\n        setZoom({commit}, zoom) {\r\n            const MIN = 1;\r\n            const MAX = 3;\r\n\r\n            let newZoom = Math.max(MIN, Math.min(MAX, +zoom));\r\n\r\n            commit('setZoom', newZoom);\r\n        },\r\n\r\n        removeGroupById({getters, commit}, groupId) {\r\n            const index = getters.getGroupIndexById(groupId);\r\n\r\n            commit('removePuzzlesGroup', index);\r\n        },\r\n\r\n        pushGroupToTop({commit}, group) {\r\n            commit('addPuzzlesGroup', group);\r\n        },\r\n\r\n        updateCanvasSize({commit}, canvasContainer) {\r\n            commit('setStageWidth', canvasContainer.offsetWidth);\r\n            commit('setStageHeight', canvasContainer.offsetHeight);\r\n        },\r\n\r\n        saveData({state}) {\r\n            const url = state.urlSave;\r\n\r\n            let groups = state.groups.map(({id, x, y, tiles}) => {\r\n\r\n                // save only id of the grouped tiles\r\n                let tilesIdArray = tiles.map(tile => tile.id);\r\n\r\n                return {\r\n                    id, x, y,\r\n                    tilesIdArray,\r\n                }\r\n            });\r\n\r\n            let dataToSave = {\r\n                time: state.time,\r\n                groups,\r\n            };\r\n\r\n            // send data to the server\r\n            exportPuzzles(url, dataToSave);\r\n        },\r\n\r\n    }\r\n});","import { createApp } from 'vue';\nimport App from './App.vue';\nimport { store } from './store'\nimport Konva from 'konva';\nimport VueKonva from 'vue-konva';\n\n// by default Konva prevent some events when node is dragging\n// it improve the performance and work well for 95% of cases\n// we need to enable all events on Konva, even when we are dragging a node\n// so it triggers touchmove correctly\nKonva.hitOnDragEnabled = true;\n\nconst app = createApp(App);\n\napp.use(store);\napp.use(VueKonva);\n\napp.mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpuzzles\"] = self[\"webpackChunkpuzzles\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2639); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_Main","_createElementVNode","_createElementBlock","_createVNode","_component_GameTimer","stopTimer","$data","isWin","_component_ZoomControls","step","zoomStep","_hoisted_1","_hoisted_2","onClick","_cache","args","_ctx","saveData","$options","displayImagePreview","_component_ImagePreview","show","showPreview","_component_PuzzleMatrix","blurImage","onWin","userWin","importPuzzles","dataToRestore","dataInJSON","LZString","JSON","parse","async","exportPuzzles","url","dataToSave","stringify","dataCompressed","localStorage","setItem","id","ref","class","_normalizeClass","blur","$props","puzzleImage","_component_v_stage","config","stageConfig","onDragstart","handleDragstart","onDragend","handleDragend","onTouchmove","zoomTouch","onTouchend","zoomTouchEnd","onWheel","zoomWheel","_component_v_layer","_Fragment","_renderList","orderedGroups","group","_component_TilesGroup","key","tiles","x","y","imageScale","twoDigitsStr","number","toString","slice","roundNumbetTo2Digits","Math","floor","PuzzlesGenerator","tilesH","tilesV","tileWidth","tileHeight","tabSize","jitter","a","b","c","d","e","flip","seed","random","offsetX","offsetY","isVertical","sin","uniform","min","max","r","randomBool","l","v","tileSize","w","l0","l1","l2","l3","l4","l5","l6","l7","l8","l9","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","next","flipold","first","setPos","xPos","yPos","this","horizontal","arr","vertical","makeTileId","indexV","indexH","createTile","top","right","left","bottom","path","createTileSides","prevV","prevH","h","createPuzzles","puzzles","tileSides","tile","tileId","linked","_component_v_group","_component_PuzzleTile","_component_v_path","name","props","computed","mapState","puzzleTile","$refs","getNode","mounted","cache","pixelRatio","beforeUnmount","clearCache","__exports__","components","PuzzleTile","TilesGroup","emits","data","isDragging","isWheeling","draggingGroupId","zoomTouchLastCenter","zoomTouchLastDist","mapGetters","width","stageWidth","height","stageHeight","scaleX","zoom","scaleY","draggable","dragBoundFunc","dragStageBoundFunc","puzzleSize","puzzleWidth","puzzleHeight","scale","canvasOffset","tilesNumberHorizontal","tilesNumberVertical","connectionOffsetX","connectionOffsetY","canvasContainer","stage","mainLayer","layer","dragLayer","draggingGroup","getGroupById","groupsLinkedToDragged","groupTilesId","map","Set","forEach","Object","values","val","add","delete","linkedGroups","groups","filter","find","has","bigGroups","length","smallGroups","groupPositionLimits","xMin","xMax","yMin","yMax","methods","mapMutations","mapActions","mergeGroups","groupsToMerge","removeGroupById","mergedGroup","shift","removedGroup","checkLinkedTiles","dx","abs","dy","mergedGroups","pushGroupToTop","evt","shape","target","moveTo","draw","checkGameIsEnd","getDistance","p1","p2","sqrt","pow","getCenter","touch1","touches","touch2","preventDefault","stopDrag","clientX","clientY","newCenter","dist","oldZoom","pointTo","newPos","setZoom","then","setStagePosition","pointer","getPointerPosition","mousePointTo","direction","deltaY","newZoom","pos","boundPos","position","newX","newY","centerOnZoom","halfWidth","halfHeight","$emit","setGroupsDataAfterInitialization","puzzleGroups","isDataRestored","restorePuzzleGroups","tilesIdArray","entries","makeRandomPosition","push","setPuzzleGroups","puzzlesGenerator","setPuzzles","watch","newValue","oldValue","updateCanvasSize","_toDisplayString","hours","twoDigits","minutes","seconds","timer","time","start","pause","setInterval","newTime","setTime","clearInterval","src","puzzleImageSrc","alt","zoomDecrease","zoomIncrease","type","Number","default","value","ZoomControls","ImagePreview","GameTimer","PuzzleMatrix","beforeMount","importData","window","initApp","Main","render","callback","imageSrc","imageObj","Image","onload","image","composedPath","store","createStore","state","urlSave","getters","getGroupIndexById","findIndex","mutations","setIsDataRestored","setRestorePuzzleGroups","setUrlSave","setPuzzleImageSrc","setPuzzleImage","setPuzzleWidth","setPuzzleHeight","setPuzzleTilesNumberHorizontal","setPuzzleTilesNumberVertical","setCanvasOffset","offset","addPuzzlesGroup","removePuzzlesGroup","index","splice","setStageWidth","setStageHeight","actions","commit","dispatch","LoadImage","MIN","MAX","groupId","offsetWidth","offsetHeight","Konva","app","createApp","App","use","VueKonva","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}